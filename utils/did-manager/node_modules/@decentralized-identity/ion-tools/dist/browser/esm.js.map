{
  "version": 3,
  "sources": ["../../node_modules/@decentralized-identity/ion-sdk/lib/ErrorCode.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/IonError.ts", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/vendor/base-x.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/src/bytes.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/src/bases/base.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/src/bases/base64.js", "../../node_modules/@decentralized-identity/ion-sdk/lib/Encoder.ts", "../../node_modules/uri-js/src/index.ts", "../../node_modules/uri-js/src/schemes/urn-uuid.ts", "../../node_modules/uri-js/src/schemes/urn.ts", "../../node_modules/uri-js/src/schemes/mailto.ts", "../../node_modules/uri-js/src/schemes/wss.ts", "../../node_modules/uri-js/src/schemes/ws.ts", "../../node_modules/uri-js/src/schemes/https.ts", "../../node_modules/uri-js/src/schemes/http.ts", "../../node_modules/uri-js/src/uri.ts", "../../node_modules/uri-js/node_modules/punycode/punycode.es6.js", "../../node_modules/uri-js/src/regexps-iri.ts", "../../node_modules/uri-js/src/regexps-uri.ts", "../../node_modules/uri-js/src/util.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/enums/OperationKeyType.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/InputValidator.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/IonSdkConfig.ts", "../../node_modules/canonicalize/lib/canonicalize.js", "../../node_modules/@decentralized-identity/ion-sdk/lib/JsonCanonicalizer.ts", "../../node_modules/@multiformats/base-x/src/index.js", "../../node_modules/multibase/src/util.js", "../../node_modules/multibase/src/base.js", "../../node_modules/multibase/src/rfc4648.js", "../../node_modules/multibase/src/constants.js", "../../node_modules/multibase/src/index.js", "../../node_modules/varint/encode.js", "../../node_modules/varint/decode.js", "../../node_modules/varint/length.js", "../../node_modules/varint/index.js", "../../node_modules/multihashes/src/constants.js", "../../node_modules/multiformats/esm/vendor/base-x.js", "../../node_modules/multiformats/esm/src/bytes.js", "../../node_modules/multiformats/esm/src/bases/base.js", "../../node_modules/multiformats/esm/src/bases/identity.js", "../../node_modules/multiformats/esm/src/bases/base2.js", "../../node_modules/multiformats/esm/src/bases/base8.js", "../../node_modules/multiformats/esm/src/bases/base10.js", "../../node_modules/multiformats/esm/src/bases/base16.js", "../../node_modules/multiformats/esm/src/bases/base32.js", "../../node_modules/multiformats/esm/src/bases/base36.js", "../../node_modules/multiformats/esm/src/bases/base58.js", "../../node_modules/multiformats/esm/src/bases/base64.js", "../../node_modules/multiformats/esm/vendor/varint.js", "../../node_modules/multiformats/esm/src/varint.js", "../../node_modules/multiformats/esm/src/hashes/digest.js", "../../node_modules/multiformats/esm/src/hashes/hasher.js", "../../node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../../node_modules/multiformats/esm/src/hashes/identity.js", "../../node_modules/multiformats/esm/src/codecs/raw.js", "../../node_modules/multiformats/esm/src/codecs/json.js", "../../node_modules/multiformats/esm/src/cid.js", "../../node_modules/multiformats/esm/src/index.js", "../../node_modules/multiformats/esm/src/basics.js", "../../node_modules/uint8arrays/esm/src/util/as-uint8array.js", "../../node_modules/uint8arrays/esm/src/alloc.js", "../../node_modules/uint8arrays/esm/src/util/bases.js", "../../node_modules/uint8arrays/esm/src/to-string.js", "../../node_modules/uint8arrays/esm/src/from-string.js", "../../node_modules/uint8arrays/esm/src/concat.js", "../../node_modules/multihashes/src/index.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/vendor/varint.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/src/varint.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/src/hashes/digest.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/src/hashes/hasher.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../../node_modules/@decentralized-identity/ion-sdk/lib/Multihash.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/enums/OperationType.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/enums/PatchAction.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/IonRequest.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/IonDid.ts", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/@noble/ed25519/lib/index.js", "../../node_modules/@decentralized-identity/ion-sdk/node_modules/@noble/secp256k1/lib/index.js", "../../node_modules/@decentralized-identity/ion-sdk/lib/IonKey.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/enums/IonNetwork.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/enums/IonPublicKeyPurpose.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/LocalSigner.ts", "../../node_modules/@decentralized-identity/ion-sdk/lib/index.ts", "../../node_modules/cross-fetch/dist/browser-ponyfill.js", "../../node_modules/@decentralized-identity/ion-pow-sdk/node_modules/hash-wasm/dist/index.umd.js", "../../node_modules/base64-js/index.js", "../../node_modules/ieee754/index.js", "../../node_modules/buffer/index.js", "../../node_modules/@decentralized-identity/ion-pow-sdk/src/index.js", "../../src/did.js", "../../src/utils.js", "../../node_modules/@noble/ed25519/lib/esm/index.js", "../../node_modules/@noble/secp256k1/lib/esm/index.js"],
  "sourcesContent": ["/**\n * ION SDK error codes.\n */\nexport default {\n  DeltaExceedsMaximumSize: 'DeltaExceedsMaximumSize',\n  DidDocumentPublicKeyIdDuplicated: 'DidDocumentPublicKeyIdDuplicated',\n  DidDocumentPublicKeyMissingOrIncorrectType: 'DidDocumentPublicKeyMissingOrIncorrectType',\n  DidDocumentServiceIdDuplicated: 'DidDocumentServiceIdDuplicated',\n  DidSuffixIncorrectLength: 'DidSuffixIncorrectLength',\n  EncodedStringIncorrectEncoding: 'EncodedStringIncorrectEncoding',\n  IdNotUsingBase64UrlCharacterSet: 'IdNotUsingBase64UrlCharacterSet',\n  IdTooLong: 'IdTooLong',\n  JwkEs256kMissingOrInvalidCrv: 'JwkEs256kMissingOrInvalidCrv',\n  JwkEs256kMissingOrInvalidKty: 'JwkEs256kMissingOrInvalidKty',\n  JwkEs256kHasIncorrectLengthOfX: 'JwkEs256kHasIncorrectLengthOfX',\n  JwkEs256kHasIncorrectLengthOfY: 'JwkEs256kHasIncorrectLengthOfY',\n  JwkEs256kHasIncorrectLengthOfD: 'JwkEs256kHasIncorrectLengthOfD',\n  MultihashStringNotAMultihash: 'MultihashStringNotAMultihash',\n  MultihashUnsupportedHashAlgorithm: 'MultihashUnsupportedHashAlgorithm',\n  PublicKeyJwkEs256kHasUnexpectedProperty: 'PublicKeyJwkEs256kHasUnexpectedProperty',\n  PublicKeyPurposeDuplicated: 'PublicKeyPurposeDuplicated',\n  ServiceEndpointCannotBeAnArray: 'ServiceEndpointCannotBeAnArray',\n  ServiceEndpointStringNotValidUri: 'ServiceEndpointStringNotValidUri',\n  ServiceTypeTooLong: 'ServiceTypeTooLong'\n};\n", "/**\n * A class that represents an ION error.\n */\nexport default class IonError extends Error {\n  constructor (public code: string, message: string) {\n    super(`${code}: ${message}`);\n\n    // NOTE: Extending 'Error' breaks prototype chain since TypeScript 2.1.\n    // The following line restores prototype chain.\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import ErrorCode from './ErrorCode';\nimport IonError from './IonError';\nimport { base64url } from 'multiformats/bases/base64';\n\n/**\n * Class that encodes binary blobs into strings.\n * Note that the encode/decode methods may change underlying encoding scheme.\n */\nexport default class Encoder {\n  /**\n   * Encodes given bytes into a Base64URL string.\n   */\n  public static encode (content: Uint8Array): string {\n    const encodedContent = base64url.baseEncode(content);\n    return encodedContent;\n  }\n\n  /**\n   * Decodes the given Base64URL string into bytes.\n   */\n  public static decodeAsBytes (encodedContent: string, inputContextForErrorLogging: string): Uint8Array {\n    if (!Encoder.isBase64UrlString(encodedContent)) {\n      throw new IonError(ErrorCode.EncodedStringIncorrectEncoding, `Given ${inputContextForErrorLogging} must be base64url string.`);\n    }\n\n    return base64url.baseDecode(encodedContent);\n  }\n\n  /**\n   * Decodes the given Base64URL string into the original string.\n   */\n  public static decodeAsString (encodedContent: string, inputContextForErrorLogging: string): string {\n    const rawBytes = Encoder.decodeAsBytes(encodedContent, inputContextForErrorLogging);\n\n    return Encoder.bytesToString(rawBytes);\n  }\n\n  /**\n   * Tests if the given string is a Base64URL string.\n   */\n  public static isBase64UrlString (input: string): boolean {\n    // NOTE:\n    // /<expression>/ denotes regex.\n    // ^ denotes beginning of string.\n    // $ denotes end of string.\n    // + denotes one or more characters.\n    const isBase64UrlString = /^[A-Za-z0-9_-]+$/.test(input);\n    return isBase64UrlString;\n  }\n\n  /**\n   * Converts input string to bytes.\n   */\n  public static stringToBytes (input: string): Uint8Array {\n    const bytes = new TextEncoder().encode(input);\n    return bytes;\n  }\n\n  /**\n   * Converts bytes to string.\n   */\n  public static bytesToString (input: Uint8Array): string {\n    const output = new TextDecoder().decode(input);\n    return output;\n  }\n}\n", "import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;", "/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n", "import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n", "import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n", "export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}", "/**\n * Operation key type, indicates if a key is a public or private key.\n */\nenum OperationKeyType {\n    Public = 'public',\n    Private = 'private'\n  }\n\nexport default OperationKeyType;\n", "import Encoder from './Encoder';\nimport ErrorCode from './ErrorCode';\nimport IonError from './IonError';\nimport IonPublicKeyPurpose from './enums/IonPublicKeyPurpose';\nimport JwkEs256k from './models/JwkEs256k';\nimport OperationKeyType from './enums/OperationKeyType';\n\n/**\n * Class containing input validation methods.\n */\nexport default class InputValidator {\n  /**\n   * Validates the schema of a ES256K JWK key.\n   */\n  public static validateEs256kOperationKey (operationKeyJwk: JwkEs256k, operationKeyType: OperationKeyType) {\n    const allowedProperties = new Set(['kty', 'crv', 'x', 'y']);\n    if (operationKeyType === OperationKeyType.Private) {\n      allowedProperties.add('d');\n    }\n    for (const property in operationKeyJwk) {\n      if (!allowedProperties.has(property)) {\n        throw new IonError(ErrorCode.PublicKeyJwkEs256kHasUnexpectedProperty, `SECP256K1 JWK key has unexpected property '${property}'.`);\n      }\n    }\n\n    if (operationKeyJwk.crv !== 'secp256k1') {\n      throw new IonError(ErrorCode.JwkEs256kMissingOrInvalidCrv, `SECP256K1 JWK 'crv' property must be 'secp256k1' but got '${operationKeyJwk.crv}.'`);\n    }\n\n    if (operationKeyJwk.kty !== 'EC') {\n      throw new IonError(ErrorCode.JwkEs256kMissingOrInvalidKty, `SECP256K1 JWK 'kty' property must be 'EC' but got '${operationKeyJwk.kty}.'`);\n    }\n\n    // `x` and `y` need 43 Base64URL encoded bytes to contain 256 bits.\n    if (operationKeyJwk.x.length !== 43) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfX, `SECP256K1 JWK 'x' property must be 43 bytes.`);\n    }\n\n    if (operationKeyJwk.y.length !== 43) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfY, `SECP256K1 JWK 'y' property must be 43 bytes.`);\n    }\n\n    if (operationKeyType === OperationKeyType.Private && (operationKeyJwk.d === undefined || operationKeyJwk.d.length !== 43)) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfD, `SECP256K1 JWK 'd' property must be 43 bytes.`);\n    }\n  }\n\n  /**\n   * Validates an `id` property (in `IonPublicKeyModel` and `IonServiceModel`).\n   */\n  public static validateId (id: string) {\n    const maxIdLength = 50;\n    if (id.length > maxIdLength) {\n      throw new IonError(ErrorCode.IdTooLong, `Key ID length ${id.length} exceed max allowed length of ${maxIdLength}.`);\n    }\n\n    if (!Encoder.isBase64UrlString(id)) {\n      throw new IonError(ErrorCode.IdNotUsingBase64UrlCharacterSet, `Key ID '${id}' is not a Base64URL string.`);\n    }\n  }\n\n  /**\n   * Validates the given public key purposes.\n   */\n  public static validatePublicKeyPurposes (purposes?: IonPublicKeyPurpose[]) {\n    // Nothing to validate if `purposes` is undefined.\n    if (purposes === undefined) {\n      return;\n    }\n\n    // Validate that all purposes are be unique.\n    const processedPurposes: Set<IonPublicKeyPurpose> = new Set();\n    for (const purpose of purposes) {\n      if (processedPurposes.has(purpose)) {\n        throw new IonError(ErrorCode.PublicKeyPurposeDuplicated, `Public key purpose '${purpose}' already specified.`);\n      }\n      processedPurposes.add(purpose);\n    }\n  }\n}\n", "import IonNetwork from './enums/IonNetwork';\n\n/**\n * Global configuration of the SDK.\n */\nexport default class IonSdkConfig {\n  /**\n   * Default hash algorithm used when hashing is performed.\n   */\n  public static hashAlgorithmInMultihashCode = 18; // SHA256\n\n  /**\n   * Maximum bytes for canonicalized delta.\n   */\n  public static maxCanonicalizedDeltaSizeInBytes: number = 1000;\n\n  /**\n   * Network name in ION DID, okay to leave as `undefined` if mainnet.\n   */\n  public static network: IonNetwork | undefined;\n}\n", "/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function (object) {\n  return serialize(object);\n\n  function serialize (object) {\n    if (object === null || typeof object !== 'object' || object.toJSON != null) {\n      return JSON.stringify(object);\n    }\n    if (Array.isArray(object) && object.length === 0) {\n      return '[]';\n    }\n    if (Array.isArray(object) && object.length === 1) {\n      return '[' + serialize(object[0]) + ']';\n    }\n    if (Array.isArray(object)) {\n      return '[' + object.reduce((t, cv, ci) => {\n        t = (ci === 1 ? serialize(t) : t);\n        return t + ',' + serialize(cv);\n      }) + ']';\n    }\n    const keys = Object.keys(object);\n    if (keys.length === 0) {\n      return '{}';\n    }\n    if (keys.length === 1) {\n      return '{' + serialize(keys[0]) + ':' + serialize(object[keys[0]]) + '}';\n    }\n    return '{' + keys.sort().reduce((t, cv, ci) => {\n      t = (ci === 1 ? serialize(t) + ':' + serialize(object[t]) : t);\n      return t + ',' + serialize(cv) + ':' + serialize(object[cv]);\n    }) + '}';\n  }\n};\n", "import Encoder from './Encoder';\n\nconst canonicalize = require('canonicalize');\n\n/**\n * Class containing reusable JSON canonicalization operations using JSON Canonicalization Scheme (JCS).\n */\nexport default class JsonCanonicalizer {\n  /**\n   * Canonicalizes the given content as bytes.\n   */\n  public static canonicalizeAsBytes (content: object): Uint8Array {\n    // We need to remove all properties with `undefined` as value so that JCS canonicalization will not produce invalid JSON.\n    const contentWithoutUndefinedProperties = JsonCanonicalizer.removeAllUndefinedProperties(content);\n    const canonicalizedString: string = canonicalize(contentWithoutUndefinedProperties);\n    const contentBytes = Encoder.stringToBytes(canonicalizedString);\n    return contentBytes;\n  }\n\n  /**\n   * Removes all properties within the given object with `undefined` as value.\n   */\n  private static removeAllUndefinedProperties (content: any): any {\n    for (const key in content) {\n      if (typeof content[key] === 'object') {\n        JsonCanonicalizer.removeAllUndefinedProperties(content[key]);\n      } else if (content[key] === undefined) {\n        delete content[key];\n      }\n    }\n\n    return content;\n  }\n}\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "'use strict'\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n", "'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n", "'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n", "'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n", "/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nconst names = Object.freeze(constants.names)\nconst codes = Object.freeze(constants.codes)\nexports.names = names\nexports.codes = codes\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import { CID } from './cid.js';\nimport * as varint from './varint.js';\nimport * as bytes from './bytes.js';\nimport * as hasher from './hashes/hasher.js';\nimport * as digest from './hashes/digest.js';\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n};", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}", "import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", "import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}", "/**\n * Multihash implementation in JavaScript.\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\nObject.freeze(codes)\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes,\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import * as multihashes from 'multihashes';\nimport Encoder from './Encoder';\nimport ErrorCode from './ErrorCode';\nimport { HashCode } from 'multihashes';\nimport IonError from './IonError';\nimport IonSdkConfig from './IonSdkConfig';\nimport JsonCanonicalizer from './JsonCanonicalizer';\nimport { sha256 } from 'multiformats/hashes/sha2';\n\n/**\n * Class that performs hashing operations using the multihash format.\n */\nexport default class Multihash {\n  /**\n   * Hashes the content using the hashing algorithm specified.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static async hash (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<Uint8Array> {\n    const conventionalHash = await this.hashAsNonMultihashBytes(content, hashAlgorithmInMultihashCode);\n    const multihash = multihashes.encode(conventionalHash, hashAlgorithmInMultihashCode as HashCode);\n\n    return multihash;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified as a generic (non-multihash) hash.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   * @returns A multihash bytes.\n   */\n  public static async hashAsNonMultihashBytes (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<Uint8Array> {\n    let hash;\n    switch (hashAlgorithmInMultihashCode) {\n      case 18: // SHA256\n        hash = await sha256.encode(content);\n        break;\n      default:\n        throw new IonError(\n          ErrorCode.MultihashUnsupportedHashAlgorithm,\n          `Hash algorithm defined in multihash code ${hashAlgorithmInMultihashCode} is not supported.`\n        );\n    }\n\n    return hash;\n  }\n\n  /**\n   * Canonicalize the given content, then double hashes the result using the latest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static async canonicalizeThenHashThenEncode (content: object, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const canonicalizedStringBytes = JsonCanonicalizer.canonicalizeAsBytes(content);\n\n    const multihashEncodedString = await Multihash.hashThenEncode(canonicalizedStringBytes, hashAlgorithmInMultihashCode);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Canonicalize the given content, then double hashes the result using the latest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static async canonicalizeThenDoubleHashThenEncode (content: object, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const contentBytes = JsonCanonicalizer.canonicalizeAsBytes(content);\n\n    // Double hash.\n    const intermediateHashBytes = await Multihash.hashAsNonMultihashBytes(contentBytes, hashAlgorithmInMultihashCode);\n    const multihashEncodedString = await Multihash.hashThenEncode(intermediateHashBytes, hashAlgorithmInMultihashCode);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified then encodes the multihash bytes as string.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static async hashThenEncode (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const multihashBytes = await Multihash.hash(content, hashAlgorithmInMultihashCode);\n    const multihashEncodedString = Encoder.encode(multihashBytes);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Checks if the given encoded hash is a multihash computed using the configured hashing algorithm.\n   */\n  public static validateEncodedHashComputedUsingSupportedHashAlgorithm (\n    encodedMultihash: string,\n    inputContextForErrorLogging: string\n  ) {\n    let multihash;\n    const multihashBytes = Encoder.decodeAsBytes(encodedMultihash, inputContextForErrorLogging);\n    try {\n      multihash = multihashes.decode(multihashBytes);\n    } catch {\n      throw new IonError(\n        ErrorCode.MultihashStringNotAMultihash,\n        `Given ${inputContextForErrorLogging} string '${encodedMultihash}' is not a multihash after decoding.`);\n    }\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n\n    if (hashAlgorithmInMultihashCode !== multihash.code) {\n      throw new IonError(\n        ErrorCode.MultihashUnsupportedHashAlgorithm,\n        `Given ${inputContextForErrorLogging} uses unsupported multihash algorithm with code ${multihash.code}, ` +\n        `should use ${hashAlgorithmInMultihashCode} or change IonSdkConfig to desired hashing algorithm.`\n      );\n    }\n  }\n}\n", "/**\n * ION operation types.\n */\nenum OperationType {\n  Create = 'create',\n  Update = 'update',\n  Deactivate = 'deactivate',\n  Recover = 'recover'\n}\n\nexport default OperationType;\n", "/**\n * Sidetree patch actions. These are the valid values in the action property of a patch.\n */\nenum PatchAction {\n    Replace = 'replace',\n    AddPublicKeys = 'add-public-keys',\n    RemovePublicKeys = 'remove-public-keys',\n    AddServices = 'add-services',\n    RemoveServices = 'remove-services'\n}\n\nexport default PatchAction;\n", "import * as URI from 'uri-js';\nimport ErrorCode from './ErrorCode';\nimport ISigner from './interfaces/ISigner';\nimport InputValidator from './InputValidator';\nimport IonCreateRequestModel from './models/IonCreateRequestModel';\nimport IonDeactivateRequestModel from './models/IonDeactivateRequestModel';\nimport IonDocumentModel from './models/IonDocumentModel';\nimport IonError from './IonError';\nimport IonPublicKeyModel from './models/IonPublicKeyModel';\nimport IonRecoverRequestModel from './models/IonRecoverRequestModel';\nimport IonSdkConfig from './IonSdkConfig';\nimport IonServiceModel from './models/IonServiceModel';\nimport IonUpdateRequestModel from './models/IonUpdateRequestModel';\nimport JsonCanonicalizer from './JsonCanonicalizer';\nimport JwkEs256k from './models/JwkEs256k';\nimport Multihash from './Multihash';\nimport OperationKeyType from './enums/OperationKeyType';\nimport OperationType from './enums/OperationType';\nimport PatchAction from './enums/PatchAction';\n\n/**\n * Class containing operations related to ION requests.\n */\nexport default class IonRequest {\n  /**\n   * Creates an ION DID create request.\n   * @param input.document The initial state to be associate with the ION DID to be created using a `replace` document patch action.\n   */\n  public static async createCreateRequest (input: {\n    recoveryKey: JwkEs256k;\n    updateKey: JwkEs256k;\n    document: IonDocumentModel;\n  }): Promise<IonCreateRequestModel> {\n    const recoveryKey = input.recoveryKey;\n    const updateKey = input.updateKey;\n    const didDocumentKeys = input.document.publicKeys;\n    const services = input.document.services;\n\n    // Validate recovery and update public keys.\n    InputValidator.validateEs256kOperationKey(recoveryKey, OperationKeyType.Public);\n    InputValidator.validateEs256kOperationKey(updateKey, OperationKeyType.Public);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(didDocumentKeys);\n\n    // Validate all given service.\n    IonRequest.validateServices(services);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n\n    const patches = [{\n      action: PatchAction.Replace,\n      document: input.document\n    }];\n\n    const delta = {\n      updateCommitment: await Multihash.canonicalizeThenDoubleHashThenEncode(updateKey, hashAlgorithmInMultihashCode),\n      patches\n    };\n\n    IonRequest.validateDeltaSize(delta);\n\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n\n    const suffixData = {\n      deltaHash,\n      recoveryCommitment: await Multihash.canonicalizeThenDoubleHashThenEncode(recoveryKey, hashAlgorithmInMultihashCode)\n    };\n\n    const operationRequest = {\n      type: OperationType.Create,\n      suffixData: suffixData,\n      delta: delta\n    };\n\n    return operationRequest;\n  }\n\n  public static async createDeactivateRequest (input: {\n    didSuffix: string,\n    recoveryPublicKey: JwkEs256k,\n    signer: ISigner\n  }): Promise<IonDeactivateRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validates recovery public key\n    InputValidator.validateEs256kOperationKey(input.recoveryPublicKey, OperationKeyType.Public);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.recoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      didSuffix: input.didSuffix,\n      recoveryKey: input.recoveryPublicKey\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Deactivate,\n      didSuffix: input.didSuffix,\n      revealValue: revealValue,\n      signedData: compactJws\n    };\n  }\n\n  public static async createRecoverRequest (input: {\n    didSuffix: string,\n    recoveryPublicKey: JwkEs256k,\n    nextRecoveryPublicKey: JwkEs256k,\n    nextUpdatePublicKey: JwkEs256k,\n    document: IonDocumentModel,\n    signer: ISigner\n  }): Promise<IonRecoverRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validate recovery public key\n    InputValidator.validateEs256kOperationKey(input.recoveryPublicKey, OperationKeyType.Public);\n\n    // Validate next recovery public key\n    InputValidator.validateEs256kOperationKey(input.nextRecoveryPublicKey, OperationKeyType.Public);\n\n    // Validate next update public key\n    InputValidator.validateEs256kOperationKey(input.nextUpdatePublicKey, OperationKeyType.Public);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(input.document.publicKeys);\n\n    // Validate all given service.\n    IonRequest.validateServices(input.document.services);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.recoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const patches = [{\n      action: PatchAction.Replace,\n      document: input.document\n    }];\n\n    const nextUpdateCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextUpdatePublicKey, hashAlgorithmInMultihashCode);\n    const delta = {\n      patches,\n      updateCommitment: nextUpdateCommitmentHash\n    };\n\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n    const nextRecoveryCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextRecoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      recoveryCommitment: nextRecoveryCommitmentHash,\n      recoveryKey: input.recoveryPublicKey,\n      deltaHash: deltaHash\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Recover,\n      didSuffix: input.didSuffix,\n      revealValue: revealValue,\n      delta: delta,\n      signedData: compactJws\n    };\n  }\n\n  public static async createUpdateRequest (input: {\n    didSuffix: string;\n    updatePublicKey: JwkEs256k;\n    nextUpdatePublicKey: JwkEs256k;\n    signer: ISigner;\n    servicesToAdd?: IonServiceModel[];\n    idsOfServicesToRemove?: string[];\n    publicKeysToAdd?: IonPublicKeyModel[];\n    idsOfPublicKeysToRemove?: string[];\n  }): Promise<IonUpdateRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validate update public key\n    InputValidator.validateEs256kOperationKey(input.updatePublicKey, OperationKeyType.Public);\n\n    // Validate next update public key\n    InputValidator.validateEs256kOperationKey(input.nextUpdatePublicKey, OperationKeyType.Public);\n\n    // Validate all given service.\n    IonRequest.validateServices(input.servicesToAdd);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(input.publicKeysToAdd);\n\n    // Validate all given service id to remove.\n    if (input.idsOfServicesToRemove !== undefined) {\n      for (const id of input.idsOfServicesToRemove) {\n        InputValidator.validateId(id);\n      }\n    }\n\n    // Validate all given public key id to remove.\n    if (input.idsOfPublicKeysToRemove !== undefined) {\n      for (const id of input.idsOfPublicKeysToRemove) {\n        InputValidator.validateId(id);\n      }\n    }\n\n    const patches = [];\n    // Create patches for add services\n    const servicesToAdd = input.servicesToAdd;\n    if (servicesToAdd !== undefined && servicesToAdd.length > 0) {\n      const patch = {\n        action: PatchAction.AddServices,\n        services: servicesToAdd\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patches for remove services\n    const idsOfServicesToRemove = input.idsOfServicesToRemove;\n    if (idsOfServicesToRemove !== undefined && idsOfServicesToRemove.length > 0) {\n      const patch = {\n        action: PatchAction.RemoveServices,\n        ids: idsOfServicesToRemove\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patches for adding public keys\n    const publicKeysToAdd = input.publicKeysToAdd;\n    if (publicKeysToAdd !== undefined && publicKeysToAdd.length > 0) {\n      const patch = {\n        action: PatchAction.AddPublicKeys,\n        publicKeys: publicKeysToAdd\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patch for removing public keys\n    const idsOfPublicKeysToRemove = input.idsOfPublicKeysToRemove;\n    if (idsOfPublicKeysToRemove !== undefined && idsOfPublicKeysToRemove.length > 0) {\n      const patch = {\n        action: PatchAction.RemovePublicKeys,\n        ids: idsOfPublicKeysToRemove\n      };\n\n      patches.push(patch);\n    }\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.updatePublicKey, hashAlgorithmInMultihashCode);\n\n    const nextUpdateCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextUpdatePublicKey, hashAlgorithmInMultihashCode);\n    const delta = {\n      patches,\n      updateCommitment: nextUpdateCommitmentHash\n    };\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      updateKey: input.updatePublicKey,\n      deltaHash\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Update,\n      didSuffix: input.didSuffix,\n      revealValue,\n      delta,\n      signedData: compactJws\n    };\n  }\n\n  private static validateDidSuffix (didSuffix: string) {\n    Multihash.validateEncodedHashComputedUsingSupportedHashAlgorithm(didSuffix, 'didSuffix');\n  }\n\n  private static validateDidDocumentKeys (publicKeys?: IonPublicKeyModel[]) {\n    if (publicKeys === undefined) {\n      return;\n    }\n\n    // Validate each public key.\n    const publicKeyIdSet: Set<string> = new Set();\n    for (const publicKey of publicKeys) {\n      if (Array.isArray(publicKey.publicKeyJwk)) {\n        throw new IonError(ErrorCode.DidDocumentPublicKeyMissingOrIncorrectType, `DID Document key 'publicKeyJwk' property is not a non-array object.`);\n      }\n\n      InputValidator.validateId(publicKey.id);\n\n      // 'id' must be unique across all given keys.\n      if (publicKeyIdSet.has(publicKey.id)) {\n        throw new IonError(ErrorCode.DidDocumentPublicKeyIdDuplicated, `DID Document key with ID '${publicKey.id}' already exists.`);\n      }\n      publicKeyIdSet.add(publicKey.id);\n\n      InputValidator.validatePublicKeyPurposes(publicKey.purposes);\n    }\n  }\n\n  private static validateServices (services?: IonServiceModel[]) {\n    if (services !== undefined && services.length !== 0) {\n      const serviceIdSet: Set<string> = new Set();\n      for (const service of services) {\n        IonRequest.validateService(service);\n        if (serviceIdSet.has(service.id)) {\n          throw new IonError(ErrorCode.DidDocumentServiceIdDuplicated, 'Service id has to be unique');\n        }\n        serviceIdSet.add(service.id);\n      }\n    }\n  }\n\n  private static validateService (service: IonServiceModel) {\n    InputValidator.validateId(service.id);\n\n    const maxTypeLength = 30;\n    if (service.type.length > maxTypeLength) {\n      const errorMessage = `Service endpoint type length ${service.type.length} exceeds max allowed length of ${maxTypeLength}.`;\n      throw new IonError(ErrorCode.ServiceTypeTooLong, errorMessage);\n    }\n\n    // Throw error if `serviceEndpoint` is an array.\n    if (Array.isArray(service.serviceEndpoint)) {\n      const errorMessage = 'Service endpoint value cannot be an array.';\n      throw new IonError(ErrorCode.ServiceEndpointCannotBeAnArray, errorMessage);\n    }\n\n    if (typeof service.serviceEndpoint === 'string') {\n      const uri = URI.parse(service.serviceEndpoint);\n      if (uri.error !== undefined) {\n        throw new IonError(ErrorCode.ServiceEndpointStringNotValidUri, `Service endpoint string '${service.serviceEndpoint}' is not a URI.`);\n      }\n    }\n  }\n\n  private static validateDeltaSize (delta: object) {\n    const deltaBytes = JsonCanonicalizer.canonicalizeAsBytes(delta);\n    if (deltaBytes.length > IonSdkConfig.maxCanonicalizedDeltaSizeInBytes) {\n      const errorMessage = `Delta of ${deltaBytes.length} bytes exceeded limit of ${IonSdkConfig.maxCanonicalizedDeltaSizeInBytes} bytes.`;\n      throw new IonError(ErrorCode.DeltaExceedsMaximumSize, errorMessage);\n    }\n  }\n}\n", "import Encoder from './Encoder';\nimport IonDocumentModel from './models/IonDocumentModel';\nimport IonRequest from './IonRequest';\nimport IonSdkConfig from './IonSdkConfig';\nimport JsonCanonicalizer from './JsonCanonicalizer';\nimport JwkEs256k from './models/JwkEs256k';\nimport Multihash from './Multihash';\n\n/**\n * Class containing DID related operations.\n */\nexport default class IonDid {\n  /**\n   * Creates a long-form DID.\n   * @param input.document The initial state to be associate with the ION DID to be created using a `replace` document patch action.\n   */\n  public static async createLongFormDid (input: {\n    recoveryKey: JwkEs256k;\n    updateKey: JwkEs256k;\n    document: IonDocumentModel;\n  }): Promise<string> {\n    const createRequest = await IonRequest.createCreateRequest(input);\n\n    const didUniqueSuffix = await IonDid.computeDidUniqueSuffix(createRequest.suffixData);\n\n    // Add the network portion if not configured for mainnet.\n    let shortFormDid;\n    if (IonSdkConfig.network === undefined || IonSdkConfig.network === 'mainnet') {\n      shortFormDid = `did:ion:${didUniqueSuffix}`;\n    } else {\n      shortFormDid = `did:ion:${IonSdkConfig.network}:${didUniqueSuffix}`;\n    }\n\n    const initialState = {\n      suffixData: createRequest.suffixData,\n      delta: createRequest.delta\n    };\n\n    // Initial state must be canonicalized as per spec.\n    const canonicalizedInitialStateBytes = JsonCanonicalizer.canonicalizeAsBytes(initialState);\n    const encodedCanonicalizedInitialStateString = Encoder.encode(canonicalizedInitialStateBytes);\n\n    const longFormDid = `${shortFormDid}:${encodedCanonicalizedInitialStateString}`;\n    return longFormDid;\n  }\n\n  /**\n   * Computes the DID unique suffix given the encoded suffix data string.\n   */\n  private static async computeDidUniqueSuffix (suffixData: object): Promise<string> {\n    const canonicalizedStringBytes = JsonCanonicalizer.canonicalizeAsBytes(suffixData);\n    const multihash = await Multihash.hash(canonicalizedStringBytes, IonSdkConfig.hashAlgorithmInMultihashCode);\n    const encodedMultihash = Encoder.encode(multihash);\n    return encodedMultihash;\n  }\n}\n", "\"use strict\";\n/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.curve25519 = exports.getSharedSecret = exports.sync = exports.verify = exports.sign = exports.getPublicKey = exports.Signature = exports.Point = exports.RistrettoPoint = exports.ExtendedPoint = exports.CURVE = void 0;\nconst nodeCrypto = require(\"crypto\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexports.CURVE = CURVE;\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nexports.ExtendedPoint = ExtendedPoint;\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nexports.RistrettoPoint = RistrettoPoint;\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexports.Signature = Signature;\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await exports.utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nasync function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nexports.getPublicKey = getPublicKey;\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nasync function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await exports.utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await exports.utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nexports.sign = sign;\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nasync function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await exports.utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexports.verify = verify;\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexports.sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nasync function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return exports.curve25519.scalarMult(head, u);\n}\nexports.getSharedSecret = getSharedSecret;\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexports.curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return exports.curve25519.scalarMult(privateKey, exports.curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexports.utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return exports.utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(exports.utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n", "\"use strict\";\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.schnorr = exports.verify = exports.signSync = exports.sign = exports.getSharedSecret = exports.recoverPublicKey = exports.getPublicKey = exports.Signature = exports.Point = exports.CURVE = void 0;\nconst nodeCrypto = require(\"crypto\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexports.CURVE = CURVE;\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nexports.Signature = Signature;\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return exports.utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexports.getPublicKey = getPublicKey;\nfunction recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nexports.getSharedSecret = getSharedSecret;\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = exports.utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nexports.sign = sign;\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexports.signSync = signSync;\nconst vopts = { strict: true };\nfunction verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nexports.verify = verify;\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = exports.utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await exports.utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(exports.utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexports.schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexports.utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return exports.utils.hashToPrivateKey(exports.utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await exports.utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return exports.utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(exports.utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n", "import * as Ed25519 from '@noble/ed25519';\nimport * as Secp256k1 from '@noble/secp256k1';\nimport InputValidator from './InputValidator';\nimport IonPublicKeyModel from './models/IonPublicKeyModel';\nimport IonPublicKeyPurpose from './enums/IonPublicKeyPurpose';\nimport JwkEd25519 from './models/JwkEd25519';\nimport JwkEs256k from './models/JwkEs256k';\nimport { base64url } from 'multiformats/bases/base64';\n\n/**\n * Class containing operations related to keys used in ION.\n */\nexport default class IonKey {\n  /**\n   * Generates SECP256K1 key pair to be used in an operation.\n   * Mainly used for testing.\n   * @returns [publicKey, privateKey]\n   */\n  public static async generateEs256kDidDocumentKeyPair (input: { id: string, purposes?: IonPublicKeyPurpose[] }): Promise<[IonPublicKeyModel, JwkEs256k]> {\n    const id = input.id;\n    const purposes = input.purposes;\n\n    InputValidator.validateId(id);\n    InputValidator.validatePublicKeyPurposes(purposes);\n\n    const [publicKey, privateKey] = await IonKey.generateEs256kKeyPair();\n    const publicKeyModel: IonPublicKeyModel = {\n      id,\n      type: 'EcdsaSecp256k1VerificationKey2019',\n      publicKeyJwk: publicKey\n    };\n\n    // Only add the `purposes` property If given `purposes` array has at least an entry.\n    if (purposes !== undefined && purposes.length > 0) {\n      publicKeyModel.purposes = purposes;\n    }\n\n    return [publicKeyModel, privateKey];\n  }\n\n  /**\n   * Generates SECP256K1 key pair for ION operation use.\n   * @returns [publicKey, privateKey]\n   */\n  public static async generateEs256kOperationKeyPair (): Promise<[JwkEs256k, JwkEs256k]> {\n    const keyPair = await IonKey.generateEs256kKeyPair();\n    return keyPair;\n  }\n\n  private static async generateEs256kKeyPair (): Promise<[JwkEs256k, JwkEs256k]> {\n    const privateKeyBytes = Secp256k1.utils.randomPrivateKey();\n    // the public key is uncompressed which means that it contains both the x and y values.\n    // the first byte is a header that indicates whether the key is uncompressed (0x04 if uncompressed).\n    // bytes 1 - 32 represent X\n    // bytes 33 - 64 represent Y\n    const publicKeyBytes = await Secp256k1.getPublicKey(privateKeyBytes);\n\n    const d = base64url.baseEncode(privateKeyBytes);\n    // skip the first byte because it's used as a header to indicate whether the key is uncompressed\n    const x = base64url.baseEncode(publicKeyBytes.subarray(1, 33));\n    const y = base64url.baseEncode(publicKeyBytes.subarray(33, 65));\n\n    const publicJwk = {\n      // alg: 'ES256K',\n      kty: 'EC',\n      crv: 'secp256k1',\n      x,\n      y\n    };\n    const privateJwk = { ...publicJwk, d };\n\n    return [publicJwk, privateJwk];\n  }\n\n  /**\n   * Generates Ed25519 key pair to be used in an operation.\n   * Mainly used for testing.\n   * @returns [publicKey, privateKey]\n   */\n  public static async generateEd25519DidDocumentKeyPair (input: { id: string, purposes?: IonPublicKeyPurpose[] }): Promise<[IonPublicKeyModel, JwkEd25519]> {\n    const id = input.id;\n    const purposes = input.purposes;\n\n    InputValidator.validateId(id);\n    InputValidator.validatePublicKeyPurposes(purposes);\n\n    const [publicKey, privateKey] = await IonKey.generateEd25519KeyPair();\n    const publicKeyModel: IonPublicKeyModel = {\n      id,\n      type: 'JsonWebKey2020',\n      publicKeyJwk: publicKey\n    };\n\n    // Only add the `purposes` property If given `purposes` array has at least an entry.\n    if (purposes !== undefined && purposes.length > 0) {\n      publicKeyModel.purposes = purposes;\n    }\n\n    return [publicKeyModel, privateKey];\n  }\n\n  /**\n   * Generates Ed25519 key pair for ION operation use.\n   * @returns [publicKey, privateKey]\n   */\n  public static async generateEd25519OperationKeyPair (): Promise<[JwkEd25519, JwkEd25519]> {\n    const keyPair = await IonKey.generateEd25519KeyPair();\n    return keyPair;\n  }\n\n  private static async generateEd25519KeyPair (): Promise<[JwkEd25519, JwkEd25519]> {\n    const privateKeyBytes = Ed25519.utils.randomPrivateKey();\n    const publicKeyBytes = await Ed25519.getPublicKey(privateKeyBytes);\n\n    const d = base64url.baseEncode(privateKeyBytes);\n    const x = base64url.baseEncode(publicKeyBytes);\n\n    const publicJwk = {\n      // alg: 'EdDSA',\n      kty: 'OKP',\n      crv: 'Ed25519',\n      x\n    };\n    const privateJwk = { ...publicJwk, d };\n\n    return [publicJwk, privateJwk];\n  }\n\n  public static isJwkEs256k (key: JwkEs256k | JwkEd25519): key is JwkEs256k {\n    return key.crv === 'secp256k1' && key.kty === 'EC';\n  };\n\n  public static isJwkEd25519 (key: JwkEs256k | JwkEd25519): key is JwkEd25519 {\n    return key.crv === 'Ed25519' && key.kty === 'OKP';\n  };\n}\n", "/**\n * Supported ION networks.\n */\nenum IonNetwork {\n  Mainnet = 'mainnet',\n  Testnet = 'test'\n}\n\nexport default IonNetwork;\n", "/**\n * DID Document key purpose.\n */\nenum IonPublicKeyPurpose {\n  Authentication = 'authentication',\n  AssertionMethod = 'assertionMethod',\n  CapabilityInvocation = 'capabilityInvocation',\n  CapabilityDelegation = 'capabilityDelegation',\n  KeyAgreement = 'keyAgreement'\n}\n\nexport default IonPublicKeyPurpose;\n", "import * as Secp256k1 from '@noble/secp256k1';\nimport Encoder from './Encoder';\nimport ISigner from './interfaces/ISigner';\nimport InputValidator from './InputValidator';\nimport JwkEs256k from './models/JwkEs256k';\nimport OperationKeyType from './enums/OperationKeyType';\nimport { base64url } from 'multiformats/bases/base64';\nimport { sha256 } from 'multiformats/hashes/sha2';\n\n/**\n * An ISigner implementation that uses a given local private key.\n */\nexport default class LocalSigner implements ISigner {\n  /**\n   * Creates a new local signer using the given private key.\n   */\n  public static create (privateKey: JwkEs256k): ISigner {\n    return new LocalSigner(privateKey);\n  }\n\n  private constructor (private privateKey: JwkEs256k) {\n    InputValidator.validateEs256kOperationKey(privateKey, OperationKeyType.Private);\n  }\n\n  public async sign (header: object, content: object): Promise<string> {\n    const headerString = JSON.stringify(header);\n    const headerBytes = Encoder.stringToBytes(headerString);\n    const encodedHeader = base64url.baseEncode(headerBytes);\n\n    const payloadString = JSON.stringify(content);\n    const payloadBytes = Encoder.stringToBytes(payloadString);\n    const encodedPayload = base64url.baseEncode(payloadBytes);\n\n    const signingContentString = `${encodedHeader}.${encodedPayload}`;\n    const signingContentBytes = Encoder.stringToBytes(signingContentString);\n    const contentHash = await sha256.encode(signingContentBytes);\n\n    const privateKeyBytes = base64url.baseDecode(this.privateKey.d!);\n    const signature = await Secp256k1.sign(contentHash, privateKeyBytes, { der: false });\n\n    const encodedSignature = base64url.baseEncode(signature);\n\n    const compactJws = `${encodedHeader}.${encodedPayload}.${encodedSignature}`;\n    return compactJws;\n  }\n}\n", "// NOTE: Aliases to classes and interfaces are used for external consumption.\n\n// SDK exports.\nimport ISigner from './interfaces/ISigner';\nimport IonDid from './IonDid';\nimport IonDocumentModel from './models/IonDocumentModel';\nimport IonKey from './IonKey';\nimport IonNetwork from './enums/IonNetwork';\nimport IonPublicKeyModel from './models/IonPublicKeyModel';\nimport IonPublicKeyPurpose from './enums/IonPublicKeyPurpose';\nimport IonRequest from './IonRequest';\nimport IonSdkConfig from './IonSdkConfig';\nimport IonServiceModel from './models/IonServiceModel';\nimport JwkEd25519 from './models/JwkEd25519';\nimport JwkEs256k from './models/JwkEs256k';\nimport LocalSigner from './LocalSigner';\n\nexport {\n  ISigner,\n  IonDid,\n  IonDocumentModel,\n  IonKey,\n  IonNetwork,\n  IonPublicKeyModel,\n  IonPublicKeyPurpose,\n  IonRequest,\n  IonSdkConfig,\n  IonServiceModel,\n  JwkEd25519,\n  JwkEs256k,\n  LocalSigner\n};\n", "var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "/*!\n * hash-wasm (https://www.npmjs.com/package/hash-wasm)\n * (c) Dani Biro\n * @license MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.hashwasm = {}));\n}(this, (function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\n\n    class Mutex {\n        constructor() {\n            this.mutex = Promise.resolve();\n        }\n        lock() {\n            let begin = () => { };\n            this.mutex = this.mutex.then(() => new Promise(begin));\n            return new Promise((res) => {\n                begin = res;\n            });\n        }\n        dispatch(fn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const unlock = yield this.lock();\n                try {\n                    return yield Promise.resolve(fn());\n                }\n                finally {\n                    unlock();\n                }\n            });\n        }\n    }\n\n    /* eslint-disable import/prefer-default-export */\n    /* eslint-disable no-bitwise */\n    var _a;\n    function getGlobal() {\n        if (typeof globalThis !== 'undefined')\n            return globalThis;\n        // eslint-disable-next-line no-restricted-globals\n        if (typeof self !== 'undefined')\n            return self;\n        if (typeof window !== 'undefined')\n            return window;\n        return global;\n    }\n    const globalObject = getGlobal();\n    const nodeBuffer = (_a = globalObject.Buffer) !== null && _a !== void 0 ? _a : null;\n    const textEncoder = globalObject.TextEncoder ? new globalObject.TextEncoder() : null;\n    function intArrayToString(arr, len) {\n        return String.fromCharCode(...arr.subarray(0, len));\n    }\n    function hexCharCodesToInt(a, b) {\n        return (((a & 0xF) + ((a >> 6) | ((a >> 3) & 0x8))) << 4) | ((b & 0xF) + ((b >> 6) | ((b >> 3) & 0x8)));\n    }\n    function writeHexToUInt8(buf, str) {\n        const size = str.length >> 1;\n        for (let i = 0; i < size; i++) {\n            const index = i << 1;\n            buf[i] = hexCharCodesToInt(str.charCodeAt(index), str.charCodeAt(index + 1));\n        }\n    }\n    function hexStringEqualsUInt8(str, buf) {\n        if (str.length !== buf.length * 2) {\n            return false;\n        }\n        for (let i = 0; i < buf.length; i++) {\n            const strIndex = i << 1;\n            if (buf[i] !== hexCharCodesToInt(str.charCodeAt(strIndex), str.charCodeAt(strIndex + 1))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    const alpha = 'a'.charCodeAt(0) - 10;\n    const digit = '0'.charCodeAt(0);\n    function getDigestHex(tmpBuffer, input, hashLength) {\n        let p = 0;\n        /* eslint-disable no-plusplus */\n        for (let i = 0; i < hashLength; i++) {\n            let nibble = input[i] >>> 4;\n            tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n            nibble = input[i] & 0xF;\n            tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n        }\n        /* eslint-enable no-plusplus */\n        return String.fromCharCode.apply(null, tmpBuffer);\n    }\n    const getUInt8Buffer = nodeBuffer !== null\n        ? (data) => {\n            if (typeof data === 'string') {\n                const buf = nodeBuffer.from(data, 'utf8');\n                return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n            }\n            if (nodeBuffer.isBuffer(data)) {\n                return new Uint8Array(data.buffer, data.byteOffset, data.length);\n            }\n            if (ArrayBuffer.isView(data)) {\n                return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n            }\n            throw new Error('Invalid data type!');\n        }\n        : (data) => {\n            if (typeof data === 'string') {\n                return textEncoder.encode(data);\n            }\n            if (ArrayBuffer.isView(data)) {\n                return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n            }\n            throw new Error('Invalid data type!');\n        };\n    const base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    const base64Lookup = new Uint8Array(256);\n    for (let i = 0; i < base64Chars.length; i++) {\n        base64Lookup[base64Chars.charCodeAt(i)] = i;\n    }\n    function encodeBase64(data, pad = true) {\n        const len = data.length;\n        const extraBytes = len % 3;\n        const parts = [];\n        const len2 = len - extraBytes;\n        for (let i = 0; i < len2; i += 3) {\n            const tmp = ((data[i] << 16) & 0xFF0000)\n                + ((data[i + 1] << 8) & 0xFF00)\n                + (data[i + 2] & 0xFF);\n            const triplet = base64Chars.charAt((tmp >> 18) & 0x3F)\n                + base64Chars.charAt((tmp >> 12) & 0x3F)\n                + base64Chars.charAt((tmp >> 6) & 0x3F)\n                + base64Chars.charAt(tmp & 0x3F);\n            parts.push(triplet);\n        }\n        if (extraBytes === 1) {\n            const tmp = data[len - 1];\n            const a = base64Chars.charAt(tmp >> 2);\n            const b = base64Chars.charAt((tmp << 4) & 0x3F);\n            parts.push(`${a}${b}`);\n            if (pad) {\n                parts.push('==');\n            }\n        }\n        else if (extraBytes === 2) {\n            const tmp = (data[len - 2] << 8) + data[len - 1];\n            const a = base64Chars.charAt(tmp >> 10);\n            const b = base64Chars.charAt((tmp >> 4) & 0x3F);\n            const c = base64Chars.charAt((tmp << 2) & 0x3F);\n            parts.push(`${a}${b}${c}`);\n            if (pad) {\n                parts.push('=');\n            }\n        }\n        return parts.join('');\n    }\n    function getDecodeBase64Length(data) {\n        let bufferLength = Math.floor(data.length * 0.75);\n        const len = data.length;\n        if (data[len - 1] === '=') {\n            bufferLength -= 1;\n            if (data[len - 2] === '=') {\n                bufferLength -= 1;\n            }\n        }\n        return bufferLength;\n    }\n    function decodeBase64(data) {\n        const bufferLength = getDecodeBase64Length(data);\n        const len = data.length;\n        const bytes = new Uint8Array(bufferLength);\n        let p = 0;\n        for (let i = 0; i < len; i += 4) {\n            const encoded1 = base64Lookup[data.charCodeAt(i)];\n            const encoded2 = base64Lookup[data.charCodeAt(i + 1)];\n            const encoded3 = base64Lookup[data.charCodeAt(i + 2)];\n            const encoded4 = base64Lookup[data.charCodeAt(i + 3)];\n            bytes[p] = (encoded1 << 2) | (encoded2 >> 4);\n            p += 1;\n            bytes[p] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n            p += 1;\n            bytes[p] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n            p += 1;\n        }\n        return bytes;\n    }\n\n    const MAX_HEAP = 16 * 1024;\n    const WASM_FUNC_HASH_LENGTH = 4;\n    const wasmMutex = new Mutex();\n    const wasmModuleCache = new Map();\n    function WASMInterface(binary, hashLength) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let wasmInstance = null;\n            let memoryView = null;\n            let initialized = false;\n            if (typeof WebAssembly === 'undefined') {\n                throw new Error('WebAssembly is not supported in this environment!');\n            }\n            const writeMemory = (data, offset = 0) => {\n                memoryView.set(data, offset);\n            };\n            const getMemory = () => memoryView;\n            const getExports = () => wasmInstance.exports;\n            const setMemorySize = (totalSize) => {\n                wasmInstance.exports.Hash_SetMemorySize(totalSize);\n                const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                memoryView = new Uint8Array(memoryBuffer, arrayOffset, totalSize);\n            };\n            const getStateSize = () => {\n                const view = new DataView(wasmInstance.exports.memory.buffer);\n                const stateSize = view.getUint32(wasmInstance.exports.STATE_SIZE, true);\n                return stateSize;\n            };\n            const loadWASMPromise = wasmMutex.dispatch(() => __awaiter(this, void 0, void 0, function* () {\n                if (!wasmModuleCache.has(binary.name)) {\n                    const asm = decodeBase64(binary.data);\n                    const promise = WebAssembly.compile(asm);\n                    wasmModuleCache.set(binary.name, promise);\n                }\n                const module = yield wasmModuleCache.get(binary.name);\n                wasmInstance = yield WebAssembly.instantiate(module, {\n                // env: {\n                //   emscripten_memcpy_big: (dest, src, num) => {\n                //     const memoryBuffer = wasmInstance.exports.memory.buffer;\n                //     const memView = new Uint8Array(memoryBuffer, 0);\n                //     memView.set(memView.subarray(src, src + num), dest);\n                //   },\n                //   print_memory: (offset, len) => {\n                //     const memoryBuffer = wasmInstance.exports.memory.buffer;\n                //     const memView = new Uint8Array(memoryBuffer, 0);\n                //     console.log('print_int32', memView.subarray(offset, offset + len));\n                //   },\n                // },\n                });\n                // wasmInstance.exports._start();\n            }));\n            const setupInterface = () => __awaiter(this, void 0, void 0, function* () {\n                if (!wasmInstance) {\n                    yield loadWASMPromise;\n                }\n                const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                memoryView = new Uint8Array(memoryBuffer, arrayOffset, MAX_HEAP);\n            });\n            const init = (bits = null) => {\n                initialized = true;\n                wasmInstance.exports.Hash_Init(bits);\n            };\n            const updateUInt8Array = (data) => {\n                let read = 0;\n                while (read < data.length) {\n                    const chunk = data.subarray(read, read + MAX_HEAP);\n                    read += chunk.length;\n                    memoryView.set(chunk);\n                    wasmInstance.exports.Hash_Update(chunk.length);\n                }\n            };\n            const update = (data) => {\n                if (!initialized) {\n                    throw new Error('update() called before init()');\n                }\n                const Uint8Buffer = getUInt8Buffer(data);\n                updateUInt8Array(Uint8Buffer);\n            };\n            const digestChars = new Uint8Array(hashLength * 2);\n            const digest = (outputType, padding = null) => {\n                if (!initialized) {\n                    throw new Error('digest() called before init()');\n                }\n                initialized = false;\n                wasmInstance.exports.Hash_Final(padding);\n                if (outputType === 'binary') {\n                    // the data is copied to allow GC of the original memory object\n                    return memoryView.slice(0, hashLength);\n                }\n                return getDigestHex(digestChars, memoryView, hashLength);\n            };\n            const save = () => {\n                if (!initialized) {\n                    throw new Error('save() can only be called after init() and before digest()');\n                }\n                const stateOffset = wasmInstance.exports.Hash_GetState();\n                const stateLength = getStateSize();\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                const internalState = new Uint8Array(memoryBuffer, stateOffset, stateLength);\n                // prefix is 4 bytes from SHA1 hash of the WASM binary\n                // it is used to detect incompatible internal states between different versions of hash-wasm\n                const prefixedState = new Uint8Array(WASM_FUNC_HASH_LENGTH + stateLength);\n                writeHexToUInt8(prefixedState, binary.hash);\n                prefixedState.set(internalState, WASM_FUNC_HASH_LENGTH);\n                return prefixedState;\n            };\n            const load = (state) => {\n                if (!(state instanceof Uint8Array)) {\n                    throw new Error('load() expects an Uint8Array generated by save()');\n                }\n                const stateOffset = wasmInstance.exports.Hash_GetState();\n                const stateLength = getStateSize();\n                const overallLength = WASM_FUNC_HASH_LENGTH + stateLength;\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                if (state.length !== overallLength) {\n                    throw new Error(`Bad state length (expected ${overallLength} bytes, got ${state.length})`);\n                }\n                if (!hexStringEqualsUInt8(binary.hash, state.subarray(0, WASM_FUNC_HASH_LENGTH))) {\n                    throw new Error('This state was written by an incompatible hash implementation');\n                }\n                const internalState = state.subarray(WASM_FUNC_HASH_LENGTH);\n                new Uint8Array(memoryBuffer, stateOffset, stateLength).set(internalState);\n                initialized = true;\n            };\n            const isDataShort = (data) => {\n                if (typeof data === 'string') {\n                    // worst case is 4 bytes / char\n                    return data.length < MAX_HEAP / 4;\n                }\n                return data.byteLength < MAX_HEAP;\n            };\n            let canSimplify = isDataShort;\n            switch (binary.name) {\n                case 'argon2':\n                case 'scrypt':\n                    canSimplify = () => true;\n                    break;\n                case 'blake2b':\n                case 'blake2s':\n                    // if there is a key at blake2 then cannot simplify\n                    canSimplify = (data, initParam) => initParam <= 512 && isDataShort(data);\n                    break;\n                case 'blake3':\n                    // if there is a key at blake3 then cannot simplify\n                    canSimplify = (data, initParam) => initParam === 0 && isDataShort(data);\n                    break;\n                case 'xxhash64': // cannot simplify\n                case 'xxhash3':\n                case 'xxhash128':\n                    canSimplify = () => false;\n                    break;\n            }\n            // shorthand for (init + update + digest) for better performance\n            const calculate = (data, initParam = null, digestParam = null) => {\n                if (!canSimplify(data, initParam)) {\n                    init(initParam);\n                    update(data);\n                    return digest('hex', digestParam);\n                }\n                const buffer = getUInt8Buffer(data);\n                memoryView.set(buffer);\n                wasmInstance.exports.Hash_Calculate(buffer.length, initParam, digestParam);\n                return getDigestHex(digestChars, memoryView, hashLength);\n            };\n            yield setupInterface();\n            return {\n                getMemory,\n                writeMemory,\n                getExports,\n                setMemorySize,\n                init,\n                update,\n                digest,\n                save,\n                load,\n                calculate,\n                hashLength,\n            };\n        });\n    }\n\n    var name$k = \"adler32\";\n    var data$k = \"AGFzbQEAAAABDANgAAF/YAAAYAF/AAMHBgABAgEAAgQFAXABAQEFBAEBAgIGDgJ/AUGAiQULfwBBgAgLB3AIBm1lbW9yeQIADkhhc2hfR2V0QnVmZmVyAAAJSGFzaF9Jbml0AAELSGFzaF9VcGRhdGUAAgpIYXNoX0ZpbmFsAAMNSGFzaF9HZXRTdGF0ZQAEDkhhc2hfQ2FsY3VsYXRlAAUKU1RBVEVfU0laRQMBCoAIBgUAQYAJCwoAQQBBATYChAgL9gYBBn9BACgChAgiAUH//wNxIQIgAUEQdiEDAkACQCAAQQFHDQAgAkEALQCACWoiAUGPgHxqIAEgAUHw/wNLGyIBIANqIgRBEHQiBUGAgDxqIAUgBEHw/wNLGyABciEBDAELAkACQAJAAkACQCAAQRBJDQBBgAkhBiAAQbArSQ0BQYAJIQYDQEEAIQUDQCAGIAVqIgEoAgAiBEH/AXEgAmoiAiADaiACIARBCHZB/wFxaiICaiACIARBEHZB/wFxaiICaiACIARBGHZqIgJqIAIgAUEEaigCACIEQf8BcWoiAmogAiAEQQh2Qf8BcWoiAmogAiAEQRB2Qf8BcWoiAmogAiAEQRh2aiICaiACIAFBCGooAgAiBEH/AXFqIgJqIAIgBEEIdkH/AXFqIgJqIAIgBEEQdkH/AXFqIgJqIAIgBEEYdmoiBGogBCABQQxqKAIAIgFB/wFxaiIEaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgJqIQMgBUEQaiIFQbArRw0ACyADQfH/A3AhAyACQfH/A3AhAiAGQbAraiEGIABB0FRqIgBBrytLDQALIABFDQQgAEEPSw0BDAILAkAgAEUNAEEAIQEDQCACIAFBgAlqLQAAaiICIANqIQMgACABQQFqIgFHDQALCyACQY+AfGogAiACQfD/A0sbIANB8f8DcEEQdHIhAQwECwNAIAYoAgAiAUH/AXEgAmoiBCADaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgRqIAQgBkEEaigCACIBQf8BcWoiBGogBCABQQh2Qf8BcWoiBGogBCABQRB2Qf8BcWoiBGogBCABQRh2aiIEaiAEIAZBCGooAgAiAUH/AXFqIgRqIAQgAUEIdkH/AXFqIgRqIAQgAUEQdkH/AXFqIgRqIAQgAUEYdmoiBGogBCAGQQxqKAIAIgFB/wFxaiIEaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgJqIQMgBkEQaiEGIABBcGoiAEEPSw0ACyAARQ0BCwNAIAIgBi0AAGoiAiADaiEDIAZBAWohBiAAQX9qIgANAAsLIANB8f8DcCEDIAJB8f8DcCECCyACIANBEHRyIQELQQAgATYChAgLMgEBf0EAQQAoAoQIIgBBGHQgAEEIdEGAgPwHcXIgAEEIdkGA/gNxIABBGHZycjYCgAkLBQBBhAgLPABBAEEBNgKECCAAEAJBAEEAKAKECCIAQRh0IABBCHRBgID8B3FyIABBCHZBgP4DcSAAQRh2cnI2AoAJCwsVAgBBgAgLBAQAAAAAQYQICwQBAAAA\";\n    var hash$k = \"321174b4\";\n    var wasmJson$k = {\n    \tname: name$k,\n    \tdata: data$k,\n    \thash: hash$k\n    };\n\n    function lockedCreate(mutex, binary, hashLength) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const unlock = yield mutex.lock();\n            const wasm = yield WASMInterface(binary, hashLength);\n            unlock();\n            return wasm;\n        });\n    }\n\n    const mutex$l = new Mutex();\n    let wasmCache$l = null;\n    /**\n     * Calculates Adler-32 hash. The resulting 32-bit hash is stored in\n     * network byte order (big-endian).\n     *\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function adler32(data) {\n        if (wasmCache$l === null) {\n            return lockedCreate(mutex$l, wasmJson$k, 4)\n                .then((wasm) => {\n                wasmCache$l = wasm;\n                return wasmCache$l.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$l.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new Adler-32 hash instance\n     */\n    function createAdler32() {\n        return WASMInterface(wasmJson$k, 4).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 4,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    var name$j = \"blake2b\";\n    var data$j = \"\";\n    var hash$j = \"68afc9cf\";\n    var wasmJson$j = {\n    \tname: name$j,\n    \tdata: data$j,\n    \thash: hash$j\n    };\n\n    const mutex$k = new Mutex();\n    let wasmCache$k = null;\n    function validateBits$4(bits) {\n        if (!Number.isInteger(bits) || bits < 8 || bits > 512 || bits % 8 !== 0) {\n            return new Error('Invalid variant! Valid values: 8, 16, ..., 512');\n        }\n        return null;\n    }\n    function getInitParam$1(outputBits, keyBits) {\n        // eslint-disable-next-line no-bitwise\n        return outputBits | (keyBits << 16);\n    }\n    /**\n     * Calculates BLAKE2b hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 512. Defaults to 512.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n     * @returns Computed hash as a hexadecimal string\n     */\n    function blake2b(data, bits = 512, key = null) {\n        if (validateBits$4(bits)) {\n            return Promise.reject(validateBits$4(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 64) {\n                return Promise.reject(new Error('Max key length is 64 bytes'));\n            }\n            initParam = getInitParam$1(bits, keyBuffer.length);\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$k === null || wasmCache$k.hashLength !== hashLength) {\n            return lockedCreate(mutex$k, wasmJson$j, hashLength)\n                .then((wasm) => {\n                wasmCache$k = wasm;\n                if (initParam > 512) {\n                    wasmCache$k.writeMemory(keyBuffer);\n                }\n                return wasmCache$k.calculate(data, initParam);\n            });\n        }\n        try {\n            if (initParam > 512) {\n                wasmCache$k.writeMemory(keyBuffer);\n            }\n            const hash = wasmCache$k.calculate(data, initParam);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new BLAKE2b hash instance\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 512. Defaults to 512.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n     */\n    function createBLAKE2b(bits = 512, key = null) {\n        if (validateBits$4(bits)) {\n            return Promise.reject(validateBits$4(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 64) {\n                return Promise.reject(new Error('Max key length is 64 bytes'));\n            }\n            initParam = getInitParam$1(bits, keyBuffer.length);\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$j, outputSize).then((wasm) => {\n            if (initParam > 512) {\n                wasm.writeMemory(keyBuffer);\n            }\n            wasm.init(initParam);\n            const obj = {\n                init: initParam > 512\n                    ? () => {\n                        wasm.writeMemory(keyBuffer);\n                        wasm.init(initParam);\n                        return obj;\n                    }\n                    : () => {\n                        wasm.init(initParam);\n                        return obj;\n                    },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 128,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$i = \"argon2\";\n    var data$i = \"\";\n    var hash$i = \"59aa4fb4\";\n    var wasmJson$i = {\n    \tname: name$i,\n    \tdata: data$i,\n    \thash: hash$i\n    };\n\n    function encodeResult(salt, options, res) {\n        const parameters = [\n            `m=${options.memorySize}`,\n            `t=${options.iterations}`,\n            `p=${options.parallelism}`,\n        ].join(',');\n        return `$argon2${options.hashType}$v=19$${parameters}$${encodeBase64(salt, false)}$${encodeBase64(res, false)}`;\n    }\n    const uint32View = new DataView(new ArrayBuffer(4));\n    function int32LE(x) {\n        uint32View.setInt32(0, x, true);\n        return new Uint8Array(uint32View.buffer);\n    }\n    function hashFunc(blake512, buf, len) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (len <= 64) {\n                const blake = yield createBLAKE2b(len * 8);\n                blake.update(int32LE(len));\n                blake.update(buf);\n                return blake.digest('binary');\n            }\n            const r = Math.ceil(len / 32) - 2;\n            const ret = new Uint8Array(len);\n            blake512.init();\n            blake512.update(int32LE(len));\n            blake512.update(buf);\n            let vp = blake512.digest('binary');\n            ret.set(vp.subarray(0, 32), 0);\n            for (let i = 1; i < r; i++) {\n                blake512.init();\n                blake512.update(vp);\n                vp = blake512.digest('binary');\n                ret.set(vp.subarray(0, 32), i * 32);\n            }\n            const partialBytesNeeded = len - 32 * r;\n            let blakeSmall;\n            if (partialBytesNeeded === 64) {\n                blakeSmall = blake512;\n                blakeSmall.init();\n            }\n            else {\n                blakeSmall = yield createBLAKE2b(partialBytesNeeded * 8);\n            }\n            blakeSmall.update(vp);\n            vp = blakeSmall.digest('binary');\n            ret.set(vp.subarray(0, partialBytesNeeded), r * 32);\n            return ret;\n        });\n    }\n    function getHashType(type) {\n        switch (type) {\n            case 'd':\n                return 0;\n            case 'i':\n                return 1;\n            default:\n                return 2;\n        }\n    }\n    function argon2Internal(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parallelism, iterations, hashLength } = options;\n            const password = getUInt8Buffer(options.password);\n            const salt = getUInt8Buffer(options.salt);\n            const version = 0x13;\n            const hashType = getHashType(options.hashType);\n            const { memorySize } = options; // in KB\n            const [argon2Interface, blake512] = yield Promise.all([\n                WASMInterface(wasmJson$i, 1024),\n                createBLAKE2b(512),\n            ]);\n            // last block is for storing the init vector\n            argon2Interface.setMemorySize(memorySize * 1024 + 1024);\n            const initVector = new Uint8Array(24);\n            const initVectorView = new DataView(initVector.buffer);\n            initVectorView.setInt32(0, parallelism, true);\n            initVectorView.setInt32(4, hashLength, true);\n            initVectorView.setInt32(8, memorySize, true);\n            initVectorView.setInt32(12, iterations, true);\n            initVectorView.setInt32(16, version, true);\n            initVectorView.setInt32(20, hashType, true);\n            argon2Interface.writeMemory(initVector, memorySize * 1024);\n            blake512.init();\n            blake512.update(initVector);\n            blake512.update(int32LE(password.length));\n            blake512.update(password);\n            blake512.update(int32LE(salt.length));\n            blake512.update(salt);\n            blake512.update(int32LE(0)); // key length + key\n            blake512.update(int32LE(0)); // associatedData length + associatedData\n            const segments = Math.floor(memorySize / (parallelism * 4)); // length of each lane\n            const lanes = segments * 4;\n            const param = new Uint8Array(72);\n            const H0 = blake512.digest('binary');\n            param.set(H0);\n            for (let lane = 0; lane < parallelism; lane++) {\n                param.set(int32LE(0), 64);\n                param.set(int32LE(lane), 68);\n                let position = lane * lanes;\n                let chunk = yield hashFunc(blake512, param, 1024);\n                argon2Interface.writeMemory(chunk, position * 1024);\n                position += 1;\n                param.set(int32LE(1), 64);\n                chunk = yield hashFunc(blake512, param, 1024);\n                argon2Interface.writeMemory(chunk, position * 1024);\n            }\n            const C = new Uint8Array(1024);\n            writeHexToUInt8(C, argon2Interface.calculate(new Uint8Array([]), memorySize));\n            const res = yield hashFunc(blake512, C, hashLength);\n            if (options.outputType === 'hex') {\n                const digestChars = new Uint8Array(hashLength * 2);\n                return getDigestHex(digestChars, res, hashLength);\n            }\n            if (options.outputType === 'encoded') {\n                return encodeResult(salt, options, res);\n            }\n            // return binary format\n            return res;\n        });\n    }\n    const validateOptions$3 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!options.password) {\n            throw new Error('Password must be specified');\n        }\n        options.password = getUInt8Buffer(options.password);\n        if (options.password.length < 1) {\n            throw new Error('Password must be specified');\n        }\n        if (!options.salt) {\n            throw new Error('Salt must be specified');\n        }\n        options.salt = getUInt8Buffer(options.salt);\n        if (options.salt.length < 8) {\n            throw new Error('Salt should be at least 8 bytes long');\n        }\n        if (!Number.isInteger(options.iterations) || options.iterations < 1) {\n            throw new Error('Iterations should be a positive number');\n        }\n        if (!Number.isInteger(options.parallelism) || options.parallelism < 1) {\n            throw new Error('Parallelism should be a positive number');\n        }\n        if (!Number.isInteger(options.hashLength) || options.hashLength < 4) {\n            throw new Error('Hash length should be at least 4 bytes.');\n        }\n        if (!Number.isInteger(options.memorySize)) {\n            throw new Error('Memory size should be specified.');\n        }\n        if (options.memorySize < 8 * options.parallelism) {\n            throw new Error('Memory size should be at least 8 * parallelism.');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'hex';\n        }\n        if (!['hex', 'binary', 'encoded'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n        }\n    };\n    /**\n     * Calculates hash using the argon2i password-hashing function\n     * @returns Computed hash\n     */\n    function argon2i(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$3(options);\n            return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'i' }));\n        });\n    }\n    /**\n     * Calculates hash using the argon2id password-hashing function\n     * @returns Computed hash\n     */\n    function argon2id(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$3(options);\n            return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'id' }));\n        });\n    }\n    /**\n     * Calculates hash using the argon2d password-hashing function\n     * @returns Computed hash\n     */\n    function argon2d(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$3(options);\n            return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'd' }));\n        });\n    }\n    const getHashParameters = (password, encoded) => {\n        const regex = /^\\$argon2(id|i|d)\\$v=([0-9]+)\\$((?:[mtp]=[0-9]+,){2}[mtp]=[0-9]+)\\$([A-Za-z0-9+/]+)\\$([A-Za-z0-9+/]+)$/;\n        const match = encoded.match(regex);\n        if (!match) {\n            throw new Error('Invalid hash');\n        }\n        const [, hashType, version, parameters, salt, hash] = match;\n        if (version !== '19') {\n            throw new Error(`Unsupported version: ${version}`);\n        }\n        const parsedParameters = {};\n        const paramMap = { m: 'memorySize', p: 'parallelism', t: 'iterations' };\n        parameters.split(',').forEach((x) => {\n            const [n, v] = x.split('=');\n            parsedParameters[paramMap[n]] = parseInt(v, 10);\n        });\n        return Object.assign(Object.assign({}, parsedParameters), { password, hashType: hashType, salt: decodeBase64(salt), hashLength: getDecodeBase64Length(hash), outputType: 'encoded' });\n    };\n    const validateVerifyOptions$1 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (options.hash === undefined || typeof options.hash !== 'string') {\n            throw new Error('Hash should be specified');\n        }\n    };\n    /**\n     * Verifies password using the argon2 password-hashing function\n     * @returns True if the encoded hash matches the password\n     */\n    function argon2Verify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateVerifyOptions$1(options);\n            const params = getHashParameters(options.password, options.hash);\n            validateOptions$3(params);\n            const hashStart = options.hash.lastIndexOf('$') + 1;\n            const result = yield argon2Internal(params);\n            return result.substring(hashStart) === options.hash.substring(hashStart);\n        });\n    }\n\n    var name$h = \"blake2s\";\n    var data$h = \"\";\n    var hash$h = \"0f570f49\";\n    var wasmJson$h = {\n    \tname: name$h,\n    \tdata: data$h,\n    \thash: hash$h\n    };\n\n    const mutex$j = new Mutex();\n    let wasmCache$j = null;\n    function validateBits$3(bits) {\n        if (!Number.isInteger(bits) || bits < 8 || bits > 256 || bits % 8 !== 0) {\n            return new Error('Invalid variant! Valid values: 8, 16, ..., 256');\n        }\n        return null;\n    }\n    function getInitParam(outputBits, keyBits) {\n        // eslint-disable-next-line no-bitwise\n        return outputBits | (keyBits << 16);\n    }\n    /**\n     * Calculates BLAKE2s hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 256. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n     * @returns Computed hash as a hexadecimal string\n     */\n    function blake2s(data, bits = 256, key = null) {\n        if (validateBits$3(bits)) {\n            return Promise.reject(validateBits$3(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 32) {\n                return Promise.reject(new Error('Max key length is 32 bytes'));\n            }\n            initParam = getInitParam(bits, keyBuffer.length);\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$j === null || wasmCache$j.hashLength !== hashLength) {\n            return lockedCreate(mutex$j, wasmJson$h, hashLength)\n                .then((wasm) => {\n                wasmCache$j = wasm;\n                if (initParam > 512) {\n                    wasmCache$j.writeMemory(keyBuffer);\n                }\n                return wasmCache$j.calculate(data, initParam);\n            });\n        }\n        try {\n            if (initParam > 512) {\n                wasmCache$j.writeMemory(keyBuffer);\n            }\n            const hash = wasmCache$j.calculate(data, initParam);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new BLAKE2s hash instance\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 256. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n     */\n    function createBLAKE2s(bits = 256, key = null) {\n        if (validateBits$3(bits)) {\n            return Promise.reject(validateBits$3(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 32) {\n                return Promise.reject(new Error('Max key length is 32 bytes'));\n            }\n            initParam = getInitParam(bits, keyBuffer.length);\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$h, outputSize).then((wasm) => {\n            if (initParam > 512) {\n                wasm.writeMemory(keyBuffer);\n            }\n            wasm.init(initParam);\n            const obj = {\n                init: initParam > 512\n                    ? () => {\n                        wasm.writeMemory(keyBuffer);\n                        wasm.init(initParam);\n                        return obj;\n                    }\n                    : () => {\n                        wasm.init(initParam);\n                        return obj;\n                    },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$g = \"blake3\";\n    var data$g = \"\";\n    var hash$g = \"e8655383\";\n    var wasmJson$g = {\n    \tname: name$g,\n    \tdata: data$g,\n    \thash: hash$g\n    };\n\n    const mutex$i = new Mutex();\n    let wasmCache$i = null;\n    function validateBits$2(bits) {\n        if (!Number.isInteger(bits) || bits < 8 || bits % 8 !== 0) {\n            return new Error('Invalid variant! Valid values: 8, 16, ...');\n        }\n        return null;\n    }\n    /**\n     * Calculates BLAKE3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n     * @returns Computed hash as a hexadecimal string\n     */\n    function blake3(data, bits = 256, key = null) {\n        if (validateBits$2(bits)) {\n            return Promise.reject(validateBits$2(bits));\n        }\n        let keyBuffer = null;\n        let initParam = 0; // key is empty by default\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length !== 32) {\n                return Promise.reject(new Error('Key length must be exactly 32 bytes'));\n            }\n            initParam = 32;\n        }\n        const hashLength = bits / 8;\n        const digestParam = hashLength;\n        if (wasmCache$i === null || wasmCache$i.hashLength !== hashLength) {\n            return lockedCreate(mutex$i, wasmJson$g, hashLength)\n                .then((wasm) => {\n                wasmCache$i = wasm;\n                if (initParam === 32) {\n                    wasmCache$i.writeMemory(keyBuffer);\n                }\n                return wasmCache$i.calculate(data, initParam, digestParam);\n            });\n        }\n        try {\n            if (initParam === 32) {\n                wasmCache$i.writeMemory(keyBuffer);\n            }\n            const hash = wasmCache$i.calculate(data, initParam, digestParam);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new BLAKE3 hash instance\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n     */\n    function createBLAKE3(bits = 256, key = null) {\n        if (validateBits$2(bits)) {\n            return Promise.reject(validateBits$2(bits));\n        }\n        let keyBuffer = null;\n        let initParam = 0; // key is empty by default\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length !== 32) {\n                return Promise.reject(new Error('Key length must be exactly 32 bytes'));\n            }\n            initParam = 32;\n        }\n        const outputSize = bits / 8;\n        const digestParam = outputSize;\n        return WASMInterface(wasmJson$g, outputSize).then((wasm) => {\n            if (initParam === 32) {\n                wasm.writeMemory(keyBuffer);\n            }\n            wasm.init(initParam);\n            const obj = {\n                init: initParam === 32\n                    ? () => {\n                        wasm.writeMemory(keyBuffer);\n                        wasm.init(initParam);\n                        return obj;\n                    }\n                    : () => {\n                        wasm.init(initParam);\n                        return obj;\n                    },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType, digestParam),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$f = \"crc32\";\n    var data$f = \"AGFzbQEAAAABEQRgAAF/YAF/AGAAAGACf38AAwgHAAEBAQIAAwQFAXABAQEFBAEBAgIGDgJ/AUGQyQULfwBBgAgLB3AIBm1lbW9yeQIADkhhc2hfR2V0QnVmZmVyAAAJSGFzaF9Jbml0AAILSGFzaF9VcGRhdGUAAwpIYXNoX0ZpbmFsAAQNSGFzaF9HZXRTdGF0ZQAFDkhhc2hfQ2FsY3VsYXRlAAYKU1RBVEVfU0laRQMBCq0HBwUAQYAJC8MDAQN/QYCJASEBQQAhAgNAIAFBAEEAQQBBAEEAQQBBAEEAIAJBAXFrIABxIAJBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzNgIAIAFBBGohASACQQFqIgJBgAJHDQALQQAhAANAIABBhJEBaiAAQYSJAWooAgAiAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhJkBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEoQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYSpAWogAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhLEBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEuQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYTBAWogAkH/AXFBAnRBgIkBaigCACACQQh2czYCACAAQQRqIgBB/AdHDQALCycAAkBBACgCgMkBIABGDQAgABABQQAgADYCgMkBC0EAQQA2AoTJAQuhAgEDf0EAKAKEyQFBf3MhAUGACSECAkAgAEEISQ0AQYAJIQIDQCACQQRqKAIAIgNBDnZB/AdxQYCRAWooAgAgA0EWdkH8B3FBgIkBaigCAHMgA0EGdkH8B3FBgJkBaigCAHMgA0H/AXFBAnRBgKEBaigCAHMgAigCACABcyIBQRZ2QfwHcUGAqQFqKAIAcyABQQ52QfwHcUGAsQFqKAIAcyABQQZ2QfwHcUGAuQFqKAIAcyABQf8BcUECdEGAwQFqKAIAcyEBIAJBCGohAiAAQXhqIgBBB0sNAAsLAkAgAEUNAANAIAFB/wFxIAItAABzQQJ0QYCJAWooAgAgAUEIdnMhASACQQFqIQIgAEF/aiIADQALC0EAIAFBf3M2AoTJAQszAQF/QQBBACgChMkBIgBBGHQgAEEIdEGAgPwHcXIgAEEIdkGA/gNxIABBGHZycjYCgAkLBgBBhMkBC1oAAkBBACgCgMkBIAFGDQAgARABQQAgATYCgMkBC0EAQQA2AoTJASAAEANBAEEAKAKEyQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgKACQsLCwEAQYAICwQEAAAA\";\n    var hash$f = \"749723dc\";\n    var wasmJson$f = {\n    \tname: name$f,\n    \tdata: data$f,\n    \thash: hash$f\n    };\n\n    const mutex$h = new Mutex();\n    let wasmCache$h = null;\n    /**\n     * Calculates CRC-32 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function crc32(data) {\n        if (wasmCache$h === null) {\n            return lockedCreate(mutex$h, wasmJson$f, 4)\n                .then((wasm) => {\n                wasmCache$h = wasm;\n                return wasmCache$h.calculate(data, 0xEDB88320);\n            });\n        }\n        try {\n            const hash = wasmCache$h.calculate(data, 0xEDB88320);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new CRC-32 hash instance\n     */\n    function createCRC32() {\n        return WASMInterface(wasmJson$f, 4).then((wasm) => {\n            wasm.init(0xEDB88320);\n            const obj = {\n                init: () => { wasm.init(0xEDB88320); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 4,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$g = new Mutex();\n    let wasmCache$g = null;\n    /**\n     * Calculates CRC-32C hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function crc32c(data) {\n        if (wasmCache$g === null) {\n            return lockedCreate(mutex$g, wasmJson$f, 4)\n                .then((wasm) => {\n                wasmCache$g = wasm;\n                return wasmCache$g.calculate(data, 0x82F63B78);\n            });\n        }\n        try {\n            const hash = wasmCache$g.calculate(data, 0x82F63B78);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new CRC-32C hash instance\n     */\n    function createCRC32C() {\n        return WASMInterface(wasmJson$f, 4).then((wasm) => {\n            wasm.init(0x82F63B78);\n            const obj = {\n                init: () => { wasm.init(0x82F63B78); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 4,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    var name$e = \"md4\";\n    var data$e = \"AGFzbQEAAAABEgRgAAF/YAAAYAF/AGACf38BfwMIBwABAgMBAAIEBQFwAQEBBQQBAQICBg4CfwFBoIoFC38AQYAICwdwCAZtZW1vcnkCAA5IYXNoX0dldEJ1ZmZlcgAACUhhc2hfSW5pdAABC0hhc2hfVXBkYXRlAAIKSGFzaF9GaW5hbAAEDUhhc2hfR2V0U3RhdGUABQ5IYXNoX0NhbGN1bGF0ZQAGClNUQVRFX1NJWkUDAQqXEQcFAEGACQstAEEAQv6568XpjpWZEDcCkIkBQQBCgcaUupbx6uZvNwKIiQFBAEIANwKAiQEL6AIBA39BAEEAKAKAiQEiASAAakH/////AXEiAjYCgIkBQQAoAoSJASEDAkAgAiABTw0AQQAgA0EBaiIDNgKEiQELQQAgAyAAQR12ajYChIkBAkACQAJAAkACQAJAIAFBP3EiAw0AQYAJIQIMAQtBwAAgA2siAiAASw0BIANBGGohA0EAIQEDQCADIAFqQYCJAWogAUGACWotAAA6AAAgAyABQQFqIgFqQdgARw0AC0GYiQFBwAAQAxogACACayEAIAJBgAlqIQILIABBwABPDQEgACEDDAILIABFDQJBACEBIANBmIkBakEALQCACToAACAAQQFGDQIgA0GZiQFqIQMgAEF/aiECA0AgAyABaiABQYEJai0AADoAACACIAFBAWoiAUcNAAwDCwsgAEE/cSEDIAIgAEFAcRADIQILIANFDQBBACEBA0AgAUGYiQFqIAIgAWotAAA6AAAgAyABQQFqIgFHDQALCwuYCwEXf0EAKAKUiQEhAkEAKAKQiQEhA0EAKAKMiQEhBEEAKAKIiQEhBQNAIABBHGooAgAiBiAAQRRqKAIAIgcgAEEYaigCACIIIABBEGooAgAiCSAAQSxqKAIAIgogAEEoaigCACILIABBJGooAgAiDCAAQSBqKAIAIg0gCyAIIABBCGooAgAiDiADaiAAQQRqKAIAIg8gAmogBCADIAJzcSACcyAFaiAAKAIAIhBqQQN3IhEgBCADc3EgA3NqQQd3IhIgESAEc3EgBHNqQQt3IhNqIBIgB2ogESAJaiAAQQxqKAIAIhQgBGogEyASIBFzcSARc2pBE3ciESATIBJzcSASc2pBA3ciEiARIBNzcSATc2pBB3ciEyASIBFzcSARc2pBC3ciFWogEyAMaiASIA1qIBEgBmogFSATIBJzcSASc2pBE3ciESAVIBNzcSATc2pBA3ciEiARIBVzcSAVc2pBB3ciEyASIBFzcSARc2pBC3ciFSAAQThqKAIAIhZqIBMgAEE0aigCACIXaiASIABBMGooAgAiGGogESAKaiAVIBMgEnNxIBJzakETdyISIBUgE3NxIBNzakEDdyITIBIgFXNxIBVzakEHdyIVIBMgEnNxIBJzakELdyIRaiAJIBVqIBAgE2ogEiAAQTxqKAIAIglqIBEgFSATc3EgE3NqQRN3IhIgESAVcnEgESAVcXJqQZnzidQFakEDdyITIBIgEXJxIBIgEXFyakGZ84nUBWpBBXciESATIBJycSATIBJxcmpBmfOJ1AVqQQl3IhVqIAcgEWogDyATaiAYIBJqIBUgESATcnEgESATcXJqQZnzidQFakENdyISIBUgEXJxIBUgEXFyakGZ84nUBWpBA3ciESASIBVycSASIBVxcmpBmfOJ1AVqQQV3IhMgESAScnEgESAScXJqQZnzidQFakEJdyIVaiAIIBNqIA4gEWogFyASaiAVIBMgEXJxIBMgEXFyakGZ84nUBWpBDXciESAVIBNycSAVIBNxcmpBmfOJ1AVqQQN3IhIgESAVcnEgESAVcXJqQZnzidQFakEFdyITIBIgEXJxIBIgEXFyakGZ84nUBWpBCXciFWogBiATaiAUIBJqIBYgEWogFSATIBJycSATIBJxcmpBmfOJ1AVqQQ13IhEgFSATcnEgFSATcXJqQZnzidQFakEDdyISIBEgFXJxIBEgFXFyakGZ84nUBWpBBXciEyASIBFycSASIBFxcmpBmfOJ1AVqQQl3IhVqIBAgEmogCSARaiAVIBMgEnJxIBMgEnFyakGZ84nUBWpBDXciBiAVcyISIBNzakGh1+f2BmpBA3ciESAGcyANIBNqIBIgEXNqQaHX5/YGakEJdyISc2pBodfn9gZqQQt3IhNqIA4gEWogEyAScyAYIAZqIBIgEXMgE3NqQaHX5/YGakEPdyIRc2pBodfn9gZqQQN3IhUgEXMgCyASaiARIBNzIBVzakGh1+f2BmpBCXciEnNqQaHX5/YGakELdyITaiAPIBVqIBMgEnMgFiARaiASIBVzIBNzakGh1+f2BmpBD3ciEXNqQaHX5/YGakEDdyIVIBFzIAwgEmogESATcyAVc2pBodfn9gZqQQl3IhJzakGh1+f2BmpBC3ciE2ogFCAVaiATIBJzIBcgEWogEiAVcyATc2pBodfn9gZqQQ93IhFzakGh1+f2BmpBA3ciFSARcyAKIBJqIBEgE3MgFXNqQaHX5/YGakEJdyISc2pBodfn9gZqQQt3IhMgA2ohAyAJIBFqIBIgFXMgE3NqQaHX5/YGakEPdyAEaiEEIBIgAmohAiAVIAVqIQUgAEHAAGohACABQUBqIgENAAtBACACNgKUiQFBACADNgKQiQFBACAENgKMiQFBACAFNgKIiQEgAAuhAgEDf0EAKAKAiQEiAEE/cSIBQZiJAWpBgAE6AAACQAJAAkAgAUE/cyICQQdLDQACQCACRQ0AIAFBmYkBaiEAA0AgAEEAOgAAIABBAWohACACQX9qIgINAAsLQcAAIQJBmIkBQcAAEAMaQQAhAAwBCyACQQhGDQEgAUEBaiEACyAAQY+JAWohAQNAIAEgAmpBADoAACACQXdqIQAgAkF/aiECIABBAEoNAAtBACgCgIkBIQALQQAgAEEVdjoA04kBQQAgAEENdjoA0okBQQAgAEEFdjoA0YkBQQAgAEEDdCICOgDQiQFBACACNgKAiQFBAEEAKAKEiQE2AtSJAUGYiQFBwAAQAxpBAEEAKQKIiQE3A4AJQQBBACkCkIkBNwOICQsGAEGAiQELMwBBAEL+uevF6Y6VmRA3ApCJAUEAQoHGlLqW8ermbzcCiIkBQQBCADcCgIkBIAAQAhAECwsLAQBBgAgLBJgAAAA=\";\n    var hash$e = \"1bf01052\";\n    var wasmJson$e = {\n    \tname: name$e,\n    \tdata: data$e,\n    \thash: hash$e\n    };\n\n    const mutex$f = new Mutex();\n    let wasmCache$f = null;\n    /**\n     * Calculates MD4 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function md4(data) {\n        if (wasmCache$f === null) {\n            return lockedCreate(mutex$f, wasmJson$e, 16)\n                .then((wasm) => {\n                wasmCache$f = wasm;\n                return wasmCache$f.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$f.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new MD4 hash instance\n     */\n    function createMD4() {\n        return WASMInterface(wasmJson$e, 16).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 16,\n            };\n            return obj;\n        });\n    }\n\n    var name$d = \"md5\";\n    var data$d = \"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\";\n    var hash$d = \"9b0fac7d\";\n    var wasmJson$d = {\n    \tname: name$d,\n    \tdata: data$d,\n    \thash: hash$d\n    };\n\n    const mutex$e = new Mutex();\n    let wasmCache$e = null;\n    /**\n     * Calculates MD5 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function md5(data) {\n        if (wasmCache$e === null) {\n            return lockedCreate(mutex$e, wasmJson$d, 16)\n                .then((wasm) => {\n                wasmCache$e = wasm;\n                return wasmCache$e.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$e.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new MD5 hash instance\n     */\n    function createMD5() {\n        return WASMInterface(wasmJson$d, 16).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 16,\n            };\n            return obj;\n        });\n    }\n\n    var name$c = \"sha1\";\n    var data$c = \"AGFzbQEAAAABEQRgAAF/YAJ/fwBgAABgAX8AAwkIAAECAQMCAAMEBQFwAQEBBQQBAQICBg4CfwFB4IkFC38AQYAICwdwCAZtZW1vcnkCAA5IYXNoX0dldEJ1ZmZlcgAACUhhc2hfSW5pdAACC0hhc2hfVXBkYXRlAAQKSGFzaF9GaW5hbAAFDUhhc2hfR2V0U3RhdGUABg5IYXNoX0NhbGN1bGF0ZQAHClNUQVRFX1NJWkUDAQqfKQgFAEGACQurIgoBfgJ/AX4BfwF+A38BfgF/AX5HfyAAIAEpAxAiAkIgiKciA0EYdCADQQh0QYCA/AdxciACQiiIp0GA/gNxIAJCOIincnIiBCABKQMIIgVCIIinIgNBGHQgA0EIdEGAgPwHcXIgBUIoiKdBgP4DcSAFQjiIp3JyIgZzIAEpAygiB0IgiKciA0EYdCADQQh0QYCA/AdxciAHQiiIp0GA/gNxIAdCOIincnIiCHMgBaciA0EYdCADQQh0QYCA/AdxciADQQh2QYD+A3EgA0EYdnJyIgkgASkDACIFpyIDQRh0IANBCHRBgID8B3FyIANBCHZBgP4DcSADQRh2cnIiCnMgASkDICILpyIDQRh0IANBCHRBgID8B3FyIANBCHZBgP4DcSADQRh2cnIiDHMgASkDMCINQiCIpyIDQRh0IANBCHRBgID8B3FyIA1CKIinQYD+A3EgDUI4iKdyciIDc0EBdyIOc0EBdyIPIAYgBUIgiKciEEEYdCAQQQh0QYCA/AdxciAFQiiIp0GA/gNxIAVCOIincnIiEXMgC0IgiKciEEEYdCAQQQh0QYCA/AdxciALQiiIp0GA/gNxIAtCOIincnIiEnMgASkDOCIFpyIQQRh0IBBBCHRBgID8B3FyIBBBCHZBgP4DcSAQQRh2cnIiEHNBAXciE3MgCCAScyATcyAMIAEpAxgiC6ciAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyIhRzIBBzIA9zQQF3IgFzQQF3IhVzIA4gEHMgAXMgAyAIcyAPcyAHpyIWQRh0IBZBCHRBgID8B3FyIBZBCHZBgP4DcSAWQRh2cnIiFyAMcyAOcyALQiCIpyIWQRh0IBZBCHRBgID8B3FyIAtCKIinQYD+A3EgC0I4iKdyciIYIARzIANzIAKnIhZBGHQgFkEIdEGAgPwHcXIgFkEIdkGA/gNxIBZBGHZyciIZIAlzIBdzIAVCIIinIhZBGHQgFkEIdEGAgPwHcXIgBUIoiKdBgP4DcSAFQjiIp3JyIhZzQQF3IhpzQQF3IhtzQQF3IhxzQQF3Ih1zQQF3Ih5zQQF3Ih8gEyAWcyASIBhzIBZzIBQgGXMgDaciIEEYdCAgQQh0QYCA/AdxciAgQQh2QYD+A3EgIEEYdnJyIiFzIBNzQQF3IiBzQQF3IiJzIBAgIXMgIHMgFXNBAXciI3NBAXciJHMgFSAicyAkcyABICBzICNzIB9zQQF3IiVzQQF3IiZzIB4gI3MgJXMgHSAVcyAfcyAcIAFzIB5zIBsgD3MgHXMgGiAOcyAccyAWIANzIBtzICEgF3MgGnMgInNBAXciJ3NBAXciKHNBAXciKXNBAXciKnNBAXciK3NBAXciLHNBAXciLXNBAXciLiAkIChzICIgG3MgKHMgICAacyAncyAkc0EBdyIvc0EBdyIwcyAjICdzIC9zICZzQQF3IjFzQQF3IjJzICYgMHMgMnMgJSAvcyAxcyAuc0EBdyIzc0EBdyI0cyAtIDFzIDNzICwgJnMgLnMgKyAlcyAtcyAqIB9zICxzICkgHnMgK3MgKCAdcyAqcyAnIBxzIClzIDBzQQF3IjVzQQF3IjZzQQF3IjdzQQF3IjhzQQF3IjlzQQF3IjpzQQF3IjtzQQF3IjwgMiA2cyAwICpzIDZzIC8gKXMgNXMgMnNBAXciPXNBAXciPnMgMSA1cyA9cyA0c0EBdyI/c0EBdyJAcyA0ID5zIEBzIDMgPXMgP3MgPHNBAXciQXNBAXciQnMgOyA/cyBBcyA6IDRzIDxzIDkgM3MgO3MgOCAucyA6cyA3IC1zIDlzIDYgLHMgOHMgNSArcyA3cyA+c0EBdyJDc0EBdyJEc0EBdyJFc0EBdyJGc0EBdyJHc0EBdyJIc0EBdyJJc0EBdyJKID8gQ3MgPSA3cyBDcyBAc0EBdyJLcyBCc0EBdyJMID4gOHMgRHMgS3NBAXciTSBFIDogMyAyIDUgKiAeIBUgICAWIBcgACgCACJOQQV3IAAoAhAiT2ogCmogACgCDCJQIAAoAggiCnMgACgCBCJRcSBQc2pBmfOJ1AVqIlJBHnciUyAEaiBRQR53IgQgBmogUCAEIApzIE5xIApzaiARaiBSQQV3akGZ84nUBWoiESBTIE5BHnciBnNxIAZzaiAKIAlqIFIgBCAGc3EgBHNqIBFBBXdqQZnzidQFaiJSQQV3akGZ84nUBWoiVCBSQR53IgQgEUEedyIJc3EgCXNqIAYgGWogUiAJIFNzcSBTc2ogVEEFd2pBmfOJ1AVqIgZBBXdqQZnzidQFaiIZQR53IlNqIAwgVEEedyIXaiAJIBRqIAYgFyAEc3EgBHNqIBlBBXdqQZnzidQFaiIJIFMgBkEedyIMc3EgDHNqIBggBGogGSAMIBdzcSAXc2ogCUEFd2pBmfOJ1AVqIgZBBXdqQZnzidQFaiIUIAZBHnciFyAJQR53IgRzcSAEc2ogEiAMaiAGIAQgU3NxIFNzaiAUQQV3akGZ84nUBWoiEkEFd2pBmfOJ1AVqIlNBHnciDGogAyAUQR53IhZqIAggBGogEiAWIBdzcSAXc2ogU0EFd2pBmfOJ1AVqIgggDCASQR53IgNzcSADc2ogISAXaiBTIAMgFnNxIBZzaiAIQQV3akGZ84nUBWoiEkEFd2pBmfOJ1AVqIhcgEkEedyIWIAhBHnciCHNxIAhzaiAQIANqIBIgCCAMc3EgDHNqIBdBBXdqQZnzidQFaiIMQQV3akGZ84nUBWoiEkEedyIDaiATIBZqIBIgDEEedyIQIBdBHnciE3NxIBNzaiAOIAhqIAwgEyAWc3EgFnNqIBJBBXdqQZnzidQFaiIOQQV3akGZ84nUBWoiFkEedyIgIA5BHnciCHMgGiATaiAOIAMgEHNxIBBzaiAWQQV3akGZ84nUBWoiDnNqIA8gEGogFiAIIANzcSADc2ogDkEFd2pBmfOJ1AVqIgNBBXdqQaHX5/YGaiIPQR53IhBqIAEgIGogA0EedyIBIA5BHnciDnMgD3NqIBsgCGogDiAgcyADc2ogD0EFd2pBodfn9gZqIgNBBXdqQaHX5/YGaiIPQR53IhMgA0EedyIVcyAiIA5qIBAgAXMgA3NqIA9BBXdqQaHX5/YGaiIDc2ogHCABaiAVIBBzIA9zaiADQQV3akGh1+f2BmoiAUEFd2pBodfn9gZqIg5BHnciD2ogHSATaiABQR53IhAgA0EedyIDcyAOc2ogJyAVaiADIBNzIAFzaiAOQQV3akGh1+f2BmoiAUEFd2pBodfn9gZqIg5BHnciEyABQR53IhVzICMgA2ogDyAQcyABc2ogDkEFd2pBodfn9gZqIgFzaiAoIBBqIBUgD3MgDnNqIAFBBXdqQaHX5/YGaiIDQQV3akGh1+f2BmoiDkEedyIPaiApIBNqIANBHnciECABQR53IgFzIA5zaiAkIBVqIAEgE3MgA3NqIA5BBXdqQaHX5/YGaiIDQQV3akGh1+f2BmoiDkEedyITIANBHnciFXMgHyABaiAPIBBzIANzaiAOQQV3akGh1+f2BmoiAXNqIC8gEGogFSAPcyAOc2ogAUEFd2pBodfn9gZqIgNBBXdqQaHX5/YGaiIOQR53Ig9qICsgAUEedyIBaiAPIANBHnciEHMgJSAVaiABIBNzIANzaiAOQQV3akGh1+f2BmoiFXNqIDAgE2ogECABcyAOc2ogFUEFd2pBodfn9gZqIg5BBXdqQaHX5/YGaiIBIA5BHnciA3IgFUEedyITcSABIANxcmogJiAQaiATIA9zIA5zaiABQQV3akGh1+f2BmoiDkEFd2pB3Pnu+HhqIg9BHnciEGogNiABQR53IgFqICwgE2ogDiABciADcSAOIAFxcmogD0EFd2pB3Pnu+HhqIhMgEHIgDkEedyIOcSATIBBxcmogMSADaiAPIA5yIAFxIA8gDnFyaiATQQV3akHc+e74eGoiAUEFd2pB3Pnu+HhqIgMgAUEedyIPciATQR53IhNxIAMgD3FyaiAtIA5qIAEgE3IgEHEgASATcXJqIANBBXdqQdz57vh4aiIBQQV3akHc+e74eGoiDkEedyIQaiA9IANBHnciA2ogNyATaiABIANyIA9xIAEgA3FyaiAOQQV3akHc+e74eGoiEyAQciABQR53IgFxIBMgEHFyaiAuIA9qIA4gAXIgA3EgDiABcXJqIBNBBXdqQdz57vh4aiIDQQV3akHc+e74eGoiDiADQR53Ig9yIBNBHnciE3EgDiAPcXJqIDggAWogAyATciAQcSADIBNxcmogDkEFd2pB3Pnu+HhqIgFBBXdqQdz57vh4aiIDQR53IhBqIDQgDkEedyIOaiA+IBNqIAEgDnIgD3EgASAOcXJqIANBBXdqQdz57vh4aiITIBByIAFBHnciAXEgEyAQcXJqIDkgD2ogAyABciAOcSADIAFxcmogE0EFd2pB3Pnu+HhqIgNBBXdqQdz57vh4aiIOIANBHnciD3IgE0EedyITcSAOIA9xcmogQyABaiADIBNyIBBxIAMgE3FyaiAOQQV3akHc+e74eGoiAUEFd2pB3Pnu+HhqIgNBHnciEGogRCAPaiADIAFBHnciFXIgDkEedyIOcSADIBVxcmogPyATaiABIA5yIA9xIAEgDnFyaiADQQV3akHc+e74eGoiAUEFd2pB3Pnu+HhqIgNBHnciEyABQR53Ig9zIDsgDmogASAQciAVcSABIBBxcmogA0EFd2pB3Pnu+HhqIgFzaiBAIBVqIAMgD3IgEHEgAyAPcXJqIAFBBXdqQdz57vh4aiIDQQV3akHWg4vTfGoiDkEedyIQaiBLIBNqIANBHnciFSABQR53IgFzIA5zaiA8IA9qIAEgE3MgA3NqIA5BBXdqQdaDi9N8aiIDQQV3akHWg4vTfGoiDkEedyIPIANBHnciE3MgRiABaiAQIBVzIANzaiAOQQV3akHWg4vTfGoiAXNqIEEgFWogEyAQcyAOc2ogAUEFd2pB1oOL03xqIgNBBXdqQdaDi9N8aiIOQR53IhBqIEIgD2ogA0EedyIVIAFBHnciAXMgDnNqIEcgE2ogASAPcyADc2ogDkEFd2pB1oOL03xqIgNBBXdqQdaDi9N8aiIOQR53Ig8gA0EedyITcyBDIDlzIEVzIE1zQQF3IhYgAWogECAVcyADc2ogDkEFd2pB1oOL03xqIgFzaiBIIBVqIBMgEHMgDnNqIAFBBXdqQdaDi9N8aiIDQQV3akHWg4vTfGoiDkEedyIQaiBJIA9qIANBHnciFSABQR53IgFzIA5zaiBEIDpzIEZzIBZzQQF3IhogE2ogASAPcyADc2ogDkEFd2pB1oOL03xqIgNBBXdqQdaDi9N8aiIOQR53Ig8gA0EedyITcyBAIERzIE1zIExzQQF3IhsgAWogECAVcyADc2ogDkEFd2pB1oOL03xqIgFzaiBFIDtzIEdzIBpzQQF3IhwgFWogEyAQcyAOc2ogAUEFd2pB1oOL03xqIgNBBXdqQdaDi9N8aiIOQR53IhAgT2o2AhAgACBQIEsgRXMgFnMgG3NBAXciFSATaiABQR53IgEgD3MgA3NqIA5BBXdqQdaDi9N8aiITQR53IhZqNgIMIAAgCiBGIDxzIEhzIBxzQQF3IA9qIANBHnciAyABcyAOc2ogE0EFd2pB1oOL03xqIg5BHndqNgIIIAAgUSBBIEtzIExzIEpzQQF3IAFqIBAgA3MgE3NqIA5BBXdqQdaDi9N8aiIBajYCBCAAIE4gTSBGcyAacyAVc0EBd2ogA2ogFiAQcyAOc2ogAUEFd2pB1oOL03xqNgIACzoAQQBC/rnrxemOlZkQNwKIiQFBAEKBxpS6lvHq5m83AoCJAUEAQvDDy54MNwKQiQFBAEEANgKYiQELqgIBBH9BACECQQBBACgClIkBIgMgAUEDdGoiBDYClIkBQQAoApiJASEFAkAgBCADTw0AQQAgBUEBaiIFNgKYiQELQQAgBSABQR12ajYCmIkBAkAgA0EDdkE/cSIEIAFqQcAASQ0AQcAAIARrIQJBACEDQQAhBQNAIAMgBGpBnIkBaiAAIANqLQAAOgAAIAIgBUEBaiIFQf8BcSIDSw0AC0GAiQFBnIkBEAEgBEH/AHMhA0EAIQQgAyABTw0AA0BBgIkBIAAgAmoQASACQf8AaiEDIAJBwABqIgUhAiADIAFJDQALIAUhAgsCQCABIAJrIgFFDQBBACEDQQAhBQNAIAMgBGpBnIkBaiAAIAMgAmpqLQAAOgAAIAEgBUEBaiIFQf8BcSIDSw0ACwsLCQBBgAkgABADC60DAQJ/IwBBEGsiACQAIABBgAE6AAcgAEEAKAKYiQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgAIIABBACgClIkBIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYADCAAQQdqQQEQAwJAQQAoApSJAUH4A3FBwANGDQADQCAAQQA6AAcgAEEHakEBEANBACgClIkBQfgDcUHAA0cNAAsLIABBCGpBCBADQQBBACgCgIkBIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYCgAlBAEEAKAKEiQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgKECUEAQQAoAoiJASIBQRh0IAFBCHRBgID8B3FyIAFBCHZBgP4DcSABQRh2cnI2AogJQQBBACgCjIkBIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYCjAlBAEEAKAKQiQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgKQCSAAQRBqJAALBgBBgIkBC0MAQQBC/rnrxemOlZkQNwKIiQFBAEKBxpS6lvHq5m83AoCJAUEAQvDDy54MNwKQiQFBAEEANgKYiQFBgAkgABADEAULCwsBAEGACAsEXAAAAA==\";\n    var hash$c = \"40d92e5d\";\n    var wasmJson$c = {\n    \tname: name$c,\n    \tdata: data$c,\n    \thash: hash$c\n    };\n\n    const mutex$d = new Mutex();\n    let wasmCache$d = null;\n    /**\n     * Calculates SHA-1 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha1(data) {\n        if (wasmCache$d === null) {\n            return lockedCreate(mutex$d, wasmJson$c, 20)\n                .then((wasm) => {\n                wasmCache$d = wasm;\n                return wasmCache$d.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$d.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-1 hash instance\n     */\n    function createSHA1() {\n        return WASMInterface(wasmJson$c, 20).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 20,\n            };\n            return obj;\n        });\n    }\n\n    var name$b = \"sha3\";\n    var data$b = \"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\";\n    var hash$b = \"ec266d91\";\n    var wasmJson$b = {\n    \tname: name$b,\n    \tdata: data$b,\n    \thash: hash$b\n    };\n\n    const mutex$c = new Mutex();\n    let wasmCache$c = null;\n    function validateBits$1(bits) {\n        if (![224, 256, 384, 512].includes(bits)) {\n            return new Error('Invalid variant! Valid values: 224, 256, 384, 512');\n        }\n        return null;\n    }\n    /**\n     * Calculates SHA-3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha3(data, bits = 512) {\n        if (validateBits$1(bits)) {\n            return Promise.reject(validateBits$1(bits));\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$c === null || wasmCache$c.hashLength !== hashLength) {\n            return lockedCreate(mutex$c, wasmJson$b, hashLength)\n                .then((wasm) => {\n                wasmCache$c = wasm;\n                return wasmCache$c.calculate(data, bits, 0x06);\n            });\n        }\n        try {\n            const hash = wasmCache$c.calculate(data, bits, 0x06);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-3 hash instance\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     */\n    function createSHA3(bits = 512) {\n        if (validateBits$1(bits)) {\n            return Promise.reject(validateBits$1(bits));\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$b, outputSize).then((wasm) => {\n            wasm.init(bits);\n            const obj = {\n                init: () => { wasm.init(bits); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType, 0x06),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 200 - 2 * outputSize,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$b = new Mutex();\n    let wasmCache$b = null;\n    function validateBits(bits) {\n        if (![224, 256, 384, 512].includes(bits)) {\n            return new Error('Invalid variant! Valid values: 224, 256, 384, 512');\n        }\n        return null;\n    }\n    /**\n     * Calculates Keccak hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     * @returns Computed hash as a hexadecimal string\n     */\n    function keccak(data, bits = 512) {\n        if (validateBits(bits)) {\n            return Promise.reject(validateBits(bits));\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$b === null || wasmCache$b.hashLength !== hashLength) {\n            return lockedCreate(mutex$b, wasmJson$b, hashLength)\n                .then((wasm) => {\n                wasmCache$b = wasm;\n                return wasmCache$b.calculate(data, bits, 0x01);\n            });\n        }\n        try {\n            const hash = wasmCache$b.calculate(data, bits, 0x01);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new Keccak hash instance\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     */\n    function createKeccak(bits = 512) {\n        if (validateBits(bits)) {\n            return Promise.reject(validateBits(bits));\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$b, outputSize).then((wasm) => {\n            wasm.init(bits);\n            const obj = {\n                init: () => { wasm.init(bits); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType, 0x01),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 200 - 2 * outputSize,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$a = \"sha256\";\n    var data$a = \"\";\n    var hash$a = \"817d957e\";\n    var wasmJson$a = {\n    \tname: name$a,\n    \tdata: data$a,\n    \thash: hash$a\n    };\n\n    const mutex$a = new Mutex();\n    let wasmCache$a = null;\n    /**\n     * Calculates SHA-2 (SHA-224) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha224(data) {\n        if (wasmCache$a === null) {\n            return lockedCreate(mutex$a, wasmJson$a, 28)\n                .then((wasm) => {\n                wasmCache$a = wasm;\n                return wasmCache$a.calculate(data, 224);\n            });\n        }\n        try {\n            const hash = wasmCache$a.calculate(data, 224);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-224) hash instance\n     */\n    function createSHA224() {\n        return WASMInterface(wasmJson$a, 28).then((wasm) => {\n            wasm.init(224);\n            const obj = {\n                init: () => { wasm.init(224); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 28,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$9 = new Mutex();\n    let wasmCache$9 = null;\n    /**\n     * Calculates SHA-2 (SHA-256) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha256(data) {\n        if (wasmCache$9 === null) {\n            return lockedCreate(mutex$9, wasmJson$a, 32)\n                .then((wasm) => {\n                wasmCache$9 = wasm;\n                return wasmCache$9.calculate(data, 256);\n            });\n        }\n        try {\n            const hash = wasmCache$9.calculate(data, 256);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-256) hash instance\n     */\n    function createSHA256() {\n        return WASMInterface(wasmJson$a, 32).then((wasm) => {\n            wasm.init(256);\n            const obj = {\n                init: () => { wasm.init(256); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 32,\n            };\n            return obj;\n        });\n    }\n\n    var name$9 = \"sha512\";\n    var data$9 = \"\";\n    var hash$9 = \"a5d1ca7c\";\n    var wasmJson$9 = {\n    \tname: name$9,\n    \tdata: data$9,\n    \thash: hash$9\n    };\n\n    const mutex$8 = new Mutex();\n    let wasmCache$8 = null;\n    /**\n     * Calculates SHA-2 (SHA-384) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha384(data) {\n        if (wasmCache$8 === null) {\n            return lockedCreate(mutex$8, wasmJson$9, 48)\n                .then((wasm) => {\n                wasmCache$8 = wasm;\n                return wasmCache$8.calculate(data, 384);\n            });\n        }\n        try {\n            const hash = wasmCache$8.calculate(data, 384);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-384) hash instance\n     */\n    function createSHA384() {\n        return WASMInterface(wasmJson$9, 48).then((wasm) => {\n            wasm.init(384);\n            const obj = {\n                init: () => { wasm.init(384); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 128,\n                digestSize: 48,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$7 = new Mutex();\n    let wasmCache$7 = null;\n    /**\n     * Calculates SHA-2 (SHA-512) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha512(data) {\n        if (wasmCache$7 === null) {\n            return lockedCreate(mutex$7, wasmJson$9, 64)\n                .then((wasm) => {\n                wasmCache$7 = wasm;\n                return wasmCache$7.calculate(data, 512);\n            });\n        }\n        try {\n            const hash = wasmCache$7.calculate(data, 512);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-512) hash instance\n     */\n    function createSHA512() {\n        return WASMInterface(wasmJson$9, 64).then((wasm) => {\n            wasm.init(512);\n            const obj = {\n                init: () => { wasm.init(512); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 128,\n                digestSize: 64,\n            };\n            return obj;\n        });\n    }\n\n    var name$8 = \"xxhash32\";\n    var data$8 = \"AGFzbQEAAAABEQRgAAF/YAF/AGAAAGACf38AAwcGAAEBAgADBAUBcAEBAQUEAQECAgYOAn8BQbCJBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAQtIYXNoX1VwZGF0ZQACCkhhc2hfRmluYWwAAw1IYXNoX0dldFN0YXRlAAQOSGFzaF9DYWxjdWxhdGUABQpTVEFURV9TSVpFAwEKswkGBQBBgAkLTQBBAEIANwOoiQFBACAANgKIiQFBACAAQc+Moo4GajYCjIkBQQAgAEH3lK+veGo2AoSJAUEAIABBqIiNoQJqNgKAiQFBAEEANgKgiQELswUBBn8CQCAARQ0AQQBBACkDqIkBIACtfDcDqIkBAkBBACgCoIkBIgEgAGpBD0sNAEEAIAFBAWo2AqCJASABQZCJAWpBAC0AgAk6AAAgAEEBRg0BQQEhAgNAQQBBACgCoIkBIgFBAWo2AqCJASABQZCJAWogAkGACWotAAA6AAAgACACQQFqIgJHDQAMAgsLIABB8AhqIQMCQAJAIAENAEEAKAKMiQEhAUEAKAKIiQEhBEEAKAKEiQEhBUEAKAKAiQEhBkGACSECDAELQYAJIQICQCABQQ9LDQBBgAkhAgNAIAItAAAhBEEAIAFBAWo2AqCJASABQZCJAWogBDoAACACQQFqIQJBACgCoIkBIgFBEEkNAAsLQQBBACgCkIkBQfeUr694bEEAKAKAiQFqQQ13QbHz3fF5bCIGNgKAiQFBAEEAKAKUiQFB95Svr3hsQQAoAoSJAWpBDXdBsfPd8XlsIgU2AoSJAUEAQQAoApiJAUH3lK+veGxBACgCiIkBakENd0Gx893xeWwiBDYCiIkBQQBBACgCnIkBQfeUr694bEEAKAKMiQFqQQ13QbHz3fF5bCIBNgKMiQELIABBgAlqIQACQCACIANLDQADQCACKAIAQfeUr694bCAGakENd0Gx893xeWwhBiACQQxqKAIAQfeUr694bCABakENd0Gx893xeWwhASACQQhqKAIAQfeUr694bCAEakENd0Gx893xeWwhBCACQQRqKAIAQfeUr694bCAFakENd0Gx893xeWwhBSACQRBqIgIgA00NAAsLQQAgATYCjIkBQQAgBDYCiIkBQQAgBTYChIkBQQAgBjYCgIkBQQAgACACayIBNgKgiQEgAUUNAEEAIQEDQCABQZCJAWogAiABai0AADoAACABQQFqIgFBACgCoIkBSQ0ACwsLzAICAX4Gf0EAKQOoiQEiAKchAQJAAkAgAEIQVA0AQQAoAoSJAUEHd0EAKAKAiQFBAXdqQQAoAoiJAUEMd2pBACgCjIkBQRJ3aiECDAELQQAoAoiJAUGxz9myAWohAgsgAiABaiECQZCJASEBQQAoAqCJASIDQZCJAWohBAJAIANBBEgNAEGQiQEhBQNAIAUoAgBBvdzKlXxsIAJqQRF3Qa/W074CbCECIAVBCGohBiAFQQRqIgEhBSAGIARNDQALCwJAIAEgBEYNACADQZCJAWohBQNAIAEtAABBsc/ZsgFsIAJqQQt3QbHz3fF5bCECIAUgAUEBaiIBRw0ACwtBACACQQ92IAJzQfeUr694bCIBQQ12IAFzQb3cypV8bCIBQRB2IAFzIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycq03A4AJCwYAQYCJAQtTAEEAQgA3A6iJAUEAIAE2AoiJAUEAIAFBz4yijgZqNgKMiQFBACABQfeUr694ajYChIkBQQAgAUGoiI2hAmo2AoCJAUEAQQA2AqCJASAAEAIQAwsLCwEAQYAICwQwAAAA\";\n    var hash$8 = \"5b6a5062\";\n    var wasmJson$8 = {\n    \tname: name$8,\n    \tdata: data$8,\n    \thash: hash$8\n    };\n\n    const mutex$6 = new Mutex();\n    let wasmCache$6 = null;\n    function validateSeed$3(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be a valid 32-bit long unsigned integer.');\n        }\n        return null;\n    }\n    /**\n     * Calculates xxHash32 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash32(data, seed = 0) {\n        if (validateSeed$3(seed)) {\n            return Promise.reject(validateSeed$3(seed));\n        }\n        if (wasmCache$6 === null) {\n            return lockedCreate(mutex$6, wasmJson$8, 4)\n                .then((wasm) => {\n                wasmCache$6 = wasm;\n                return wasmCache$6.calculate(data, seed);\n            });\n        }\n        try {\n            const hash = wasmCache$6.calculate(data, seed);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash32 hash instance\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash32(seed = 0) {\n        if (validateSeed$3(seed)) {\n            return Promise.reject(validateSeed$3(seed));\n        }\n        return WASMInterface(wasmJson$8, 4).then((wasm) => {\n            wasm.init(seed);\n            const obj = {\n                init: () => { wasm.init(seed); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 16,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    var name$7 = \"xxhash64\";\n    var data$7 = \"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\";\n    var hash$7 = \"bc315b2a\";\n    var wasmJson$7 = {\n    \tname: name$7,\n    \tdata: data$7,\n    \thash: hash$7\n    };\n\n    const mutex$5 = new Mutex();\n    let wasmCache$5 = null;\n    const seedBuffer$2 = new ArrayBuffer(8);\n    function validateSeed$2(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n        }\n        return null;\n    }\n    function writeSeed$2(arr, low, high) {\n        // write in little-endian format\n        const buffer = new DataView(arr);\n        buffer.setUint32(0, low, true);\n        buffer.setUint32(4, high, true);\n    }\n    /**\n     * Calculates xxHash64 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash64(data, seedLow = 0, seedHigh = 0) {\n        if (validateSeed$2(seedLow)) {\n            return Promise.reject(validateSeed$2(seedLow));\n        }\n        if (validateSeed$2(seedHigh)) {\n            return Promise.reject(validateSeed$2(seedHigh));\n        }\n        if (wasmCache$5 === null) {\n            return lockedCreate(mutex$5, wasmJson$7, 8)\n                .then((wasm) => {\n                wasmCache$5 = wasm;\n                writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n                wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n                return wasmCache$5.calculate(data);\n            });\n        }\n        try {\n            writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n            wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n            const hash = wasmCache$5.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash64 hash instance\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash64(seedLow = 0, seedHigh = 0) {\n        if (validateSeed$2(seedLow)) {\n            return Promise.reject(validateSeed$2(seedLow));\n        }\n        if (validateSeed$2(seedHigh)) {\n            return Promise.reject(validateSeed$2(seedHigh));\n        }\n        return WASMInterface(wasmJson$7, 8).then((wasm) => {\n            const instanceBuffer = new ArrayBuffer(8);\n            writeSeed$2(instanceBuffer, seedLow, seedHigh);\n            wasm.writeMemory(new Uint8Array(instanceBuffer));\n            wasm.init();\n            const obj = {\n                init: () => {\n                    wasm.writeMemory(new Uint8Array(instanceBuffer));\n                    wasm.init();\n                    return obj;\n                },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 32,\n                digestSize: 8,\n            };\n            return obj;\n        });\n    }\n\n    var name$6 = \"xxhash3\";\n    var data$6 = \"\";\n    var hash$6 = \"187bc2c6\";\n    var wasmJson$6 = {\n    \tname: name$6,\n    \tdata: data$6,\n    \thash: hash$6\n    };\n\n    const mutex$4 = new Mutex();\n    let wasmCache$4 = null;\n    const seedBuffer$1 = new ArrayBuffer(8);\n    function validateSeed$1(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n        }\n        return null;\n    }\n    function writeSeed$1(arr, low, high) {\n        // write in little-endian format\n        const buffer = new DataView(arr);\n        buffer.setUint32(0, low, true);\n        buffer.setUint32(4, high, true);\n    }\n    /**\n     * Calculates xxHash3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash3(data, seedLow = 0, seedHigh = 0) {\n        if (validateSeed$1(seedLow)) {\n            return Promise.reject(validateSeed$1(seedLow));\n        }\n        if (validateSeed$1(seedHigh)) {\n            return Promise.reject(validateSeed$1(seedHigh));\n        }\n        if (wasmCache$4 === null) {\n            return lockedCreate(mutex$4, wasmJson$6, 8)\n                .then((wasm) => {\n                wasmCache$4 = wasm;\n                writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n                wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n                return wasmCache$4.calculate(data);\n            });\n        }\n        try {\n            writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n            wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n            const hash = wasmCache$4.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash3 hash instance\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash3(seedLow = 0, seedHigh = 0) {\n        if (validateSeed$1(seedLow)) {\n            return Promise.reject(validateSeed$1(seedLow));\n        }\n        if (validateSeed$1(seedHigh)) {\n            return Promise.reject(validateSeed$1(seedHigh));\n        }\n        return WASMInterface(wasmJson$6, 8).then((wasm) => {\n            const instanceBuffer = new ArrayBuffer(8);\n            writeSeed$1(instanceBuffer, seedLow, seedHigh);\n            wasm.writeMemory(new Uint8Array(instanceBuffer));\n            wasm.init();\n            const obj = {\n                init: () => {\n                    wasm.writeMemory(new Uint8Array(instanceBuffer));\n                    wasm.init();\n                    return obj;\n                },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 512,\n                digestSize: 8,\n            };\n            return obj;\n        });\n    }\n\n    var name$5 = \"xxhash128\";\n    var data$5 = \"\";\n    var hash$5 = \"e8e3fcf8\";\n    var wasmJson$5 = {\n    \tname: name$5,\n    \tdata: data$5,\n    \thash: hash$5\n    };\n\n    const mutex$3 = new Mutex();\n    let wasmCache$3 = null;\n    const seedBuffer = new ArrayBuffer(8);\n    function validateSeed(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n        }\n        return null;\n    }\n    function writeSeed(arr, low, high) {\n        // write in little-endian format\n        const buffer = new DataView(arr);\n        buffer.setUint32(0, low, true);\n        buffer.setUint32(4, high, true);\n    }\n    /**\n     * Calculates xxHash128 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash128(data, seedLow = 0, seedHigh = 0) {\n        if (validateSeed(seedLow)) {\n            return Promise.reject(validateSeed(seedLow));\n        }\n        if (validateSeed(seedHigh)) {\n            return Promise.reject(validateSeed(seedHigh));\n        }\n        if (wasmCache$3 === null) {\n            return lockedCreate(mutex$3, wasmJson$5, 16)\n                .then((wasm) => {\n                wasmCache$3 = wasm;\n                writeSeed(seedBuffer, seedLow, seedHigh);\n                wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n                return wasmCache$3.calculate(data);\n            });\n        }\n        try {\n            writeSeed(seedBuffer, seedLow, seedHigh);\n            wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n            const hash = wasmCache$3.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash128 hash instance\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash128(seedLow = 0, seedHigh = 0) {\n        if (validateSeed(seedLow)) {\n            return Promise.reject(validateSeed(seedLow));\n        }\n        if (validateSeed(seedHigh)) {\n            return Promise.reject(validateSeed(seedHigh));\n        }\n        return WASMInterface(wasmJson$5, 16).then((wasm) => {\n            const instanceBuffer = new ArrayBuffer(8);\n            writeSeed(instanceBuffer, seedLow, seedHigh);\n            wasm.writeMemory(new Uint8Array(instanceBuffer));\n            wasm.init();\n            const obj = {\n                init: () => {\n                    wasm.writeMemory(new Uint8Array(instanceBuffer));\n                    wasm.init();\n                    return obj;\n                },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 512,\n                digestSize: 16,\n            };\n            return obj;\n        });\n    }\n\n    var name$4 = \"ripemd160\";\n    var data$4 = \"\";\n    var hash$4 = \"42f1de39\";\n    var wasmJson$4 = {\n    \tname: name$4,\n    \tdata: data$4,\n    \thash: hash$4\n    };\n\n    const mutex$2 = new Mutex();\n    let wasmCache$2 = null;\n    /**\n     * Calculates RIPEMD-160 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function ripemd160(data) {\n        if (wasmCache$2 === null) {\n            return lockedCreate(mutex$2, wasmJson$4, 20)\n                .then((wasm) => {\n                wasmCache$2 = wasm;\n                return wasmCache$2.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$2.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new RIPEMD-160 hash instance\n     */\n    function createRIPEMD160() {\n        return WASMInterface(wasmJson$4, 20).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 20,\n            };\n            return obj;\n        });\n    }\n\n    function calculateKeyBuffer(hasher, key) {\n        const { blockSize } = hasher;\n        const buf = getUInt8Buffer(key);\n        if (buf.length > blockSize) {\n            hasher.update(buf);\n            const uintArr = hasher.digest('binary');\n            hasher.init();\n            return uintArr;\n        }\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n    }\n    function calculateHmac(hasher, key) {\n        hasher.init();\n        const { blockSize } = hasher;\n        const keyBuf = calculateKeyBuffer(hasher, key);\n        const keyBuffer = new Uint8Array(blockSize);\n        keyBuffer.set(keyBuf);\n        const opad = new Uint8Array(blockSize);\n        for (let i = 0; i < blockSize; i++) {\n            const v = keyBuffer[i];\n            opad[i] = v ^ 0x5C;\n            keyBuffer[i] = v ^ 0x36;\n        }\n        hasher.update(keyBuffer);\n        const obj = {\n            init: () => {\n                hasher.init();\n                hasher.update(keyBuffer);\n                return obj;\n            },\n            update: (data) => {\n                hasher.update(data);\n                return obj;\n            },\n            digest: ((outputType) => {\n                const uintArr = hasher.digest('binary');\n                hasher.init();\n                hasher.update(opad);\n                hasher.update(uintArr);\n                return hasher.digest(outputType);\n            }),\n            save: () => {\n                throw new Error('save() not supported');\n            },\n            load: () => {\n                throw new Error('load() not supported');\n            },\n            blockSize: hasher.blockSize,\n            digestSize: hasher.digestSize,\n        };\n        return obj;\n    }\n    /**\n     * Calculates HMAC hash\n     * @param hash Hash algorithm to use. It has to be the return value of a function like createSHA1()\n     * @param key Key (string, Buffer or TypedArray)\n     */\n    function createHMAC(hash, key) {\n        if (!hash || !hash.then) {\n            throw new Error('Invalid hash function is provided! Usage: createHMAC(createMD5(), \"key\").');\n        }\n        return hash.then((hasher) => calculateHmac(hasher, key));\n    }\n\n    function calculatePBKDF2(digest, salt, iterations, hashLength, outputType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const DK = new Uint8Array(hashLength);\n            const block1 = new Uint8Array(salt.length + 4);\n            const block1View = new DataView(block1.buffer);\n            const saltBuffer = getUInt8Buffer(salt);\n            const saltUIntBuffer = new Uint8Array(saltBuffer.buffer, saltBuffer.byteOffset, saltBuffer.length);\n            block1.set(saltUIntBuffer);\n            let destPos = 0;\n            const hLen = digest.digestSize;\n            const l = Math.ceil(hashLength / hLen);\n            let T = null;\n            let U = null;\n            for (let i = 1; i <= l; i++) {\n                block1View.setUint32(salt.length, i);\n                digest.init();\n                digest.update(block1);\n                T = digest.digest('binary');\n                U = T.slice();\n                for (let j = 1; j < iterations; j++) {\n                    digest.init();\n                    digest.update(U);\n                    U = digest.digest('binary');\n                    for (let k = 0; k < hLen; k++) {\n                        T[k] ^= U[k];\n                    }\n                }\n                DK.set(T.subarray(0, hashLength - destPos), destPos);\n                destPos += hLen;\n            }\n            if (outputType === 'binary') {\n                return DK;\n            }\n            const digestChars = new Uint8Array(hashLength * 2);\n            return getDigestHex(digestChars, DK, hashLength);\n        });\n    }\n    const validateOptions$2 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!options.hashFunction || !options.hashFunction.then) {\n            throw new Error('Invalid hash function is provided! Usage: pbkdf2(\"password\", \"salt\", 1000, 32, createSHA1()).');\n        }\n        if (!Number.isInteger(options.iterations) || options.iterations < 1) {\n            throw new Error('Iterations should be a positive number');\n        }\n        if (!Number.isInteger(options.hashLength) || options.hashLength < 1) {\n            throw new Error('Hash length should be a positive number');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'hex';\n        }\n        if (!['hex', 'binary'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n        }\n    };\n    /**\n     * Generates a new PBKDF2 hash for the supplied password\n     */\n    function pbkdf2(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$2(options);\n            const hmac = yield createHMAC(options.hashFunction, options.password);\n            return calculatePBKDF2(hmac, options.salt, options.iterations, options.hashLength, options.outputType);\n        });\n    }\n\n    var name$3 = \"scrypt\";\n    var data$3 = \"AGFzbQEAAAABIwZgAX8Bf2AAAX9gBX9/fn9/AGAEf39/fwBgAX8AYAN/f38AAwcGAAECAwQFBAUBcAEBAQUGAQECgIACBggBfwFBkIgECwc5BAZtZW1vcnkCABJIYXNoX1NldE1lbW9yeVNpemUAAA5IYXNoX0dldEJ1ZmZlcgABBnNjcnlwdAAFCpcmBlsBAX9BACEBAkAgAEEAKAKACGsiAEUNAAJAIABBEHYgAEGAgHxxIABJaiIAQABBf0cNAEH/ASEBDAELQQAhAUEAQQApA4AIIABBEHStfDcDgAgLIAFBGHRBGHULagECfwJAQQAoAogIIgANAEEAPwBBEHQiADYCiAhBgIAgQQAoAoAIayIBRQ0AAkAgAUEQdiABQYCAfHEgAUlqIgBAAEF/Rw0AQQAPC0EAQQApA4AIIABBEHStfDcDgAhBACgCiAghAAsgAAu5EAMMfwl+An8gAUEFdCEFIAQgAUEIdGohBiAEIAFBB3QiB2ohCAJAAkACQAJAIAFFDQBBACEJIAAhCiAEIQsDQCALIAooAgA2AgAgCkEEaiEKIAtBBGohCyAJQQFqIgkgBUkNAAsgAlANAiABQQh0IQxBACENIAMhDgNAQQAhCSABIQ8DQCAOIAlqIgogBCAJaiILKQMANwMAIApBCGogC0EIaikDADcDACAKQRBqIAtBEGopAwA3AwAgCkEYaiALQRhqKQMANwMAIApBIGogC0EgaikDADcDACAKQShqIAtBKGopAwA3AwAgCkEwaiALQTBqKQMANwMAIApBOGogC0E4aikDADcDACAKQcAAaiALQcAAaikDADcDACAKQcgAaiALQcgAaikDADcDACAKQdAAaiALQdAAaikDADcDACAKQdgAaiALQdgAaikDADcDACAKQeAAaiALQeAAaikDADcDACAKQegAaiALQegAaikDADcDACAKQfAAaiALQfAAaikDADcDACAKQfgAaiALQfgAaikDADcDACAJQYABaiEJIA9Bf2oiDw0ACyAEIAggBiABEAMgDiEJIAQhDyABIRADQCAJIAdqIgogDyAHaiILKQMANwMAIApBCGogC0EIaikDADcDACAKQRBqIAtBEGopAwA3AwAgCkEYaiALQRhqKQMANwMAIApBIGogC0EgaikDADcDACAKQShqIAtBKGopAwA3AwAgCkEwaiALQTBqKQMANwMAIApBOGogC0E4aikDADcDACAKQcAAaiALQcAAaikDADcDACAKQcgAaiALQcgAaikDADcDACAKQdAAaiALQdAAaikDADcDACAKQdgAaiALQdgAaikDADcDACAKQeAAaiALQeAAaikDADcDACAKQegAaiALQegAaikDADcDACAKQfAAaiALQfAAaikDADcDACAKQfgAaiALQfgAaikDADcDACAJQYABaiEJIA9BgAFqIQ8gEEF/aiIQDQALIAggBCAGIAEQAyAOIAxqIQ4gDUECaiINrSACVA0ADAILCyACUA0CIAhBQGoiCikDOCERIAopAzAhEiAKKQMoIRMgCikDICEUIAopAxghFSAKKQMQIRYgCikDCCEXIAopAwAhGEECIQoDQCAKrSEZIApBAmohCiAZIAJUDQALIAYgETcDOCAGIBI3AzAgBiATNwMoIAYgFDcDICAGIBU3AxggBiAWNwMQIAYgFzcDCCAGIBg3AwALAkAgAUUNACAHQUBqIgogCGohGiACp0F/aiEOIAogBGohGyABQQd0IQ1BACEMA0AgAyANIBsoAgAgDnFsaiEHQQAhCSABIQ8DQCAEIAlqIgogCikDACAHIAlqIgspAwCFNwMAIApBCGoiECAQKQMAIAtBCGopAwCFNwMAIApBEGoiECAQKQMAIAtBEGopAwCFNwMAIApBGGoiECAQKQMAIAtBGGopAwCFNwMAIApBIGoiECAQKQMAIAtBIGopAwCFNwMAIApBKGoiECAQKQMAIAtBKGopAwCFNwMAIApBMGoiECAQKQMAIAtBMGopAwCFNwMAIApBOGoiECAQKQMAIAtBOGopAwCFNwMAIApBwABqIhAgECkDACALQcAAaikDAIU3AwAgCkHIAGoiECAQKQMAIAtByABqKQMAhTcDACAKQdAAaiIQIBApAwAgC0HQAGopAwCFNwMAIApB2ABqIhAgECkDACALQdgAaikDAIU3AwAgCkHgAGoiECAQKQMAIAtB4ABqKQMAhTcDACAKQegAaiIQIBApAwAgC0HoAGopAwCFNwMAIApB8ABqIhAgECkDACALQfAAaikDAIU3AwAgCkH4AGoiCiAKKQMAIAtB+ABqKQMAhTcDACAJQYABaiEJIA9Bf2oiDw0ACyAEIAggBiABEAMgAyANIBooAgAgDnFsaiEHQQAhCSABIQ8DQCAIIAlqIgogCikDACAHIAlqIgspAwCFNwMAIApBCGoiECAQKQMAIAtBCGopAwCFNwMAIApBEGoiECAQKQMAIAtBEGopAwCFNwMAIApBGGoiECAQKQMAIAtBGGopAwCFNwMAIApBIGoiECAQKQMAIAtBIGopAwCFNwMAIApBKGoiECAQKQMAIAtBKGopAwCFNwMAIApBMGoiECAQKQMAIAtBMGopAwCFNwMAIApBOGoiECAQKQMAIAtBOGopAwCFNwMAIApBwABqIhAgECkDACALQcAAaikDAIU3AwAgCkHIAGoiECAQKQMAIAtByABqKQMAhTcDACAKQdAAaiIQIBApAwAgC0HQAGopAwCFNwMAIApB2ABqIhAgECkDACALQdgAaikDAIU3AwAgCkHgAGoiECAQKQMAIAtB4ABqKQMAhTcDACAKQegAaiIQIBApAwAgC0HoAGopAwCFNwMAIApB8ABqIhAgECkDACALQfAAaikDAIU3AwAgCkH4AGoiCiAKKQMAIAtB+ABqKQMAhTcDACAJQYABaiEJIA9Bf2oiDw0ACyAIIAQgBiABEAMgDEECaiIMrSACVA0ADAILCyAIQUBqIgopAzghESAKKQMwIRIgCikDKCETIAopAyAhFCAKKQMYIRUgCikDECEWIAopAwghFyAKKQMAIRhBAiEKA0AgCq0hGSAKQQJqIQogGSACVA0ACyAGIBE3AzggBiASNwMwIAYgEzcDKCAGIBQ3AyAgBiAVNwMYIAYgFjcDECAGIBc3AwggBiAYNwMACyABRQ0AQQAhCgNAIAAgBCgCADYCACAAQQRqIQAgBEEEaiEEIApBAWoiCiAFSQ0ACwsL4wUDAX8IfgJ/IAIgA0EHdCAAakFAaiIEKQMAIgU3AwAgAiAEKQMIIgY3AwggAiAEKQMQIgc3AxAgAiAEKQMYIgg3AxggAiAEKQMgIgk3AyAgAiAEKQMoIgo3AyggAiAEKQMwIgs3AzAgAiAEKQM4Igw3AzgCQCADRQ0AIANBAXQhDSAAQfgAaiEEIANBBnQhDkECIQADQCACIAUgBEGIf2opAwCFNwMAIAIgBiAEQZB/aikDAIU3AwggAiAHIARBmH9qKQMAhTcDECACIAggBEGgf2opAwCFNwMYIAIgCSAEQah/aikDAIU3AyAgAiAKIARBsH9qKQMAhTcDKCACIAsgBEG4f2opAwCFNwMwIAIgDCAEQUBqKQMAhTcDOCACEAQgASACKQMANwMAIAFBCGogAikDCDcDACABQRBqIAIpAxA3AwAgAUEYaiACKQMYNwMAIAFBIGogAikDIDcDACABQShqIAIpAyg3AwAgAUEwaiACKQMwNwMAIAFBOGogAikDODcDACACIAIpAwAgBEFIaikDAIU3AwAgAiACKQMIIARBUGopAwCFNwMIIAIgAikDECAEQVhqKQMAhTcDECACIAIpAxggBEFgaikDAIU3AxggAiACKQMgIARBaGopAwCFNwMgIAIgAikDKCAEQXBqKQMAhTcDKCACIAIpAzAgBEF4aikDAIU3AzAgAiACKQM4IAQpAwCFNwM4IAIQBCABIA5qIgMgAikDADcDACADQQhqIAIpAwg3AwAgA0EQaiACKQMQNwMAIANBGGogAikDGDcDACADQSBqIAIpAyA3AwAgA0EoaiACKQMoNwMAIANBMGogAikDMDcDACADQThqIAIpAzg3AwAgACANTw0BIARBgAFqIQQgAUHAAGohASAAQQJqIQAgAikDOCEMIAIpAzAhCyACKQMoIQogAikDICEJIAIpAxghCCACKQMQIQcgAikDCCEGIAIpAwAhBQwACwsLug0IAX4BfwF+AX8BfgF/AX4SfyAAIAAoAgQgACkDKCIBQiCIpyICIAApAzgiA0IgiKciBGpBB3cgACkDCCIFQiCIp3MiBiAEakEJdyAAKQMYIgdCIIincyIIIAZqQQ13IAJzIgkgB6ciCiABpyILakEHdyADp3MiAiALakEJdyAFp3MiDCACakENdyAKcyINIAxqQRJ3IAtzIg4gACkDACIBQiCIpyIPIAApAxAiA0IgiKciEGpBB3cgACkDICIFQiCIp3MiC2pBB3dzIgogCSAIakESdyAEcyIRIAJqQQd3IAApAzAiB6ciCSABpyISakEHdyADp3MiBCASakEJdyAFp3MiEyAEakENdyAJcyIUcyIJIBFqQQl3IAsgEGpBCXcgB0IgiKdzIhVzIhYgCWpBDXcgAnMiFyAWakESdyARcyIRakEHdyAGIBQgE2pBEncgEnMiEmpBB3cgFSALakENdyAPcyIUcyICIBJqQQl3IAxzIg8gAmpBDXcgBnMiGHMiBiARakEJdyAIIA0gFCAVakESdyAQcyIQIARqQQd3cyIMIBBqQQl3cyIIcyIVIAZqQQ13IApzIhQgDCAKIA5qQQl3IBNzIhMgCmpBDXcgC3MiGSATakESdyAOcyIKakEHdyAXcyILIApqQQl3IA9zIg4gC2pBDXcgDHMiFyAOakESdyAKcyINIAIgCCAMakENdyAEcyIMIAhqQRJ3IBBzIghqQQd3IBlzIgpqQQd3cyIEIBQgFWpBEncgEXMiECALakEHdyAJIBggD2pBEncgEnMiEWpBB3cgDHMiDCARakEJdyATcyISIAxqQQ13IAlzIg9zIgkgEGpBCXcgCiAIakEJdyAWcyITcyIWIAlqQQ13IAtzIhQgFmpBEncgEHMiEGpBB3cgBiAPIBJqQRJ3IBFzIhFqQQd3IBMgCmpBDXcgAnMiC3MiAiARakEJdyAOcyIOIAJqQQ13IAZzIhhzIgYgEGpBCXcgFSAXIAsgE2pBEncgCHMiCCAMakEHd3MiCyAIakEJd3MiE3MiFSAGakENdyAEcyIXIAsgBCANakEJdyAScyISIARqQQ13IApzIhkgEmpBEncgDXMiBGpBB3cgFHMiCiAEakEJdyAOcyIPIApqQQ13IAtzIhQgD2pBEncgBHMiDSACIBMgC2pBDXcgDHMiDCATakESdyAIcyIIakEHdyAZcyILakEHd3MiBCAXIBVqQRJ3IBBzIhAgCmpBB3cgCSAYIA5qQRJ3IBFzIg5qQQd3IAxzIgwgDmpBCXcgEnMiESAMakENdyAJcyIXcyIJIBBqQQl3IAsgCGpBCXcgFnMiEnMiEyAJakENdyAKcyIYIBNqQRJ3IBBzIhBqQQd3IAYgFyARakESdyAOcyIKakEHdyASIAtqQQ13IAJzIhdzIgIgCmpBCXcgD3MiDiACakENdyAGcyIWcyIGIAkgFiAOakESdyAKcyIWakEHdyAVIBQgFyASakESdyAIcyIIIAxqQQd3cyIKIAhqQQl3cyISIApqQQ13IAxzIg9zIgwgFmpBCXcgBCANakEJdyARcyIRcyIVIAxqQQ13IAlzIhQgFWpBEncgFnMiCWpBB3cgAiAPIBJqQRJ3IAhzIghqQQd3IBEgBGpBDXcgC3MiD3MiCyAIakEJdyATcyITIAtqQQ13IAJzIhdzIhZqNgIEIAAgACgCCCAWIAlqQQl3IAogDyARakESdyANcyIRakEHdyAYcyICIBFqQQl3IA5zIg5zIg9qNgIIIAAgACgCDCAPIBZqQQ13IAZzIg1qNgIMIAAgACgCECAGIBBqQQl3IBJzIhIgDiACakENdyAKcyIYIBcgE2pBEncgCHMiCiAMakEHd3MiCCAKakEJd3MiFiAIakENdyAMcyIMajYCECAAIAAoAgAgDSAPakESdyAJc2o2AgAgACAAKAIUIAwgFmpBEncgCnNqNgIUIAAgACgCGCAIajYCGCAAIAAoAhwgFmo2AhwgACAAKAIgIBIgBmpBDXcgBHMiCSAYIA5qQRJ3IBFzIgYgC2pBB3dzIgogBmpBCXcgFXMiBGo2AiAgACAAKAIkIAQgCmpBDXcgC3MiC2o2AiQgACAAKAIoIAsgBGpBEncgBnNqNgIoIAAgACgCLCAKajYCLCAAIAAoAjAgCSASakESdyAQcyIGIAJqQQd3IBRzIgtqNgIwIAAgACgCNCALIAZqQQl3IBNzIgpqNgI0IAAgACgCOCAKIAtqQQ13IAJzIgJqNgI4IAAgACgCPCACIApqQRJ3IAZzajYCPAtyAwF/AX4CfwJAIAJFDQBBACgCiAgiAyAAIAGtIgQgAyAAQQd0IgUgAmxqIgMgAyAFIAFsaiIGEAIgAkEBRg0AIAJBf2ohASAFIQIDQEEAKAKICCACaiAAIAQgAyAGEAIgAiAFaiECIAFBf2oiAQ0ACwsL\";\n    var hash$3 = \"d96fb75f\";\n    var wasmJson$3 = {\n    \tname: name$3,\n    \tdata: data$3,\n    \thash: hash$3\n    };\n\n    function scryptInternal(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { costFactor, blockSize, parallelism, hashLength, } = options;\n            const SHA256Hasher = createSHA256();\n            const blockData = yield pbkdf2({\n                password: options.password,\n                salt: options.salt,\n                iterations: 1,\n                hashLength: 128 * blockSize * parallelism,\n                hashFunction: SHA256Hasher,\n                outputType: 'binary',\n            });\n            const scryptInterface = yield WASMInterface(wasmJson$3, 0);\n            // last block is for storing the temporary vectors\n            const VSize = 128 * blockSize * costFactor;\n            const XYSize = 256 * blockSize;\n            scryptInterface.setMemorySize(blockData.length + VSize + XYSize);\n            scryptInterface.writeMemory(blockData, 0);\n            // mix blocks\n            scryptInterface.getExports().scrypt(blockSize, costFactor, parallelism);\n            const expensiveSalt = scryptInterface\n                .getMemory()\n                .subarray(0, 128 * blockSize * parallelism);\n            const outputData = yield pbkdf2({\n                password: options.password,\n                salt: expensiveSalt,\n                iterations: 1,\n                hashLength,\n                hashFunction: SHA256Hasher,\n                outputType: 'binary',\n            });\n            if (options.outputType === 'hex') {\n                const digestChars = new Uint8Array(hashLength * 2);\n                return getDigestHex(digestChars, outputData, hashLength);\n            }\n            // return binary format\n            return outputData;\n        });\n    }\n    // eslint-disable-next-line no-bitwise\n    const isPowerOfTwo = (v) => v && !(v & (v - 1));\n    const validateOptions$1 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!Number.isInteger(options.blockSize) || options.blockSize < 1) {\n            throw new Error('Block size should be a positive number');\n        }\n        if (!Number.isInteger(options.costFactor)\n            || options.costFactor < 2\n            || !isPowerOfTwo(options.costFactor)) {\n            throw new Error('Cost factor should be a power of 2, greater than 1');\n        }\n        if (!Number.isInteger(options.parallelism) || options.parallelism < 1) {\n            throw new Error('Parallelism should be a positive number');\n        }\n        if (!Number.isInteger(options.hashLength) || options.hashLength < 1) {\n            throw new Error('Hash length should be a positive number.');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'hex';\n        }\n        if (!['hex', 'binary'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n        }\n    };\n    /**\n     * Calculates hash using the scrypt password-based key derivation function\n     * @returns Computed hash as a hexadecimal string or as\n     *          Uint8Array depending on the outputType option\n     */\n    function scrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$1(options);\n            return scryptInternal(options);\n        });\n    }\n\n    var name$2 = \"bcrypt\";\n    var data$2 = \"\";\n    var hash$2 = \"9f4c7b9e\";\n    var wasmJson$2 = {\n    \tname: name$2,\n    \tdata: data$2,\n    \thash: hash$2\n    };\n\n    function bcryptInternal(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { costFactor, password, salt } = options;\n            const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n            bcryptInterface.writeMemory(getUInt8Buffer(salt), 0);\n            const passwordBuffer = getUInt8Buffer(password);\n            bcryptInterface.writeMemory(passwordBuffer, 16);\n            const shouldEncode = options.outputType === 'encoded' ? 1 : 0;\n            bcryptInterface.getExports().bcrypt(passwordBuffer.length, costFactor, shouldEncode);\n            const memory = bcryptInterface.getMemory();\n            if (options.outputType === 'encoded') {\n                return intArrayToString(memory, 60);\n            }\n            if (options.outputType === 'hex') {\n                const digestChars = new Uint8Array(24 * 2);\n                return getDigestHex(digestChars, memory, 24);\n            }\n            // return binary format\n            // the data is copied to allow GC of the original memory buffer\n            return memory.slice(0, 24);\n        });\n    }\n    const validateOptions = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!Number.isInteger(options.costFactor) || options.costFactor < 4 || options.costFactor > 31) {\n            throw new Error('Cost factor should be a number between 4 and 31');\n        }\n        options.password = getUInt8Buffer(options.password);\n        if (options.password.length < 1) {\n            throw new Error('Password should be at least 1 byte long');\n        }\n        if (options.password.length > 72) {\n            throw new Error('Password should be at most 72 bytes long');\n        }\n        options.salt = getUInt8Buffer(options.salt);\n        if (options.salt.length !== 16) {\n            throw new Error('Salt should be 16 bytes long');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'encoded';\n        }\n        if (!['hex', 'binary', 'encoded'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n        }\n    };\n    /**\n     * Calculates hash using the bcrypt password-hashing function\n     * @returns Computed hash\n     */\n    function bcrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions(options);\n            return bcryptInternal(options);\n        });\n    }\n    const validateHashCharacters = (hash) => {\n        if (!/^\\$2[axyb]\\$[0-3][0-9]\\$[./A-Za-z0-9]{53}$/.test(hash)) {\n            return false;\n        }\n        if (hash[4] === '0' && parseInt(hash[5], 10) < 4) {\n            return false;\n        }\n        if (hash[4] === '3' && parseInt(hash[5], 10) > 1) {\n            return false;\n        }\n        return true;\n    };\n    const validateVerifyOptions = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (options.hash === undefined || typeof options.hash !== 'string') {\n            throw new Error('Hash should be specified');\n        }\n        if (options.hash.length !== 60) {\n            throw new Error('Hash should be 60 bytes long');\n        }\n        if (!validateHashCharacters(options.hash)) {\n            throw new Error('Invalid hash');\n        }\n        options.password = getUInt8Buffer(options.password);\n        if (options.password.length < 1) {\n            throw new Error('Password should be at least 1 byte long');\n        }\n        if (options.password.length > 72) {\n            throw new Error('Password should be at most 72 bytes long');\n        }\n    };\n    /**\n     * Verifies password using bcrypt password-hashing function\n     * @returns True if the encoded hash matches the password\n     */\n    function bcryptVerify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateVerifyOptions(options);\n            const { hash, password } = options;\n            const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n            bcryptInterface.writeMemory(getUInt8Buffer(hash), 0);\n            const passwordBuffer = getUInt8Buffer(password);\n            bcryptInterface.writeMemory(passwordBuffer, 60);\n            return !!bcryptInterface.getExports().bcrypt_verify(passwordBuffer.length);\n        });\n    }\n\n    var name$1 = \"whirlpool\";\n    var data$1 = \"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\";\n    var hash$1 = \"358808f8\";\n    var wasmJson$1 = {\n    \tname: name$1,\n    \tdata: data$1,\n    \thash: hash$1\n    };\n\n    const mutex$1 = new Mutex();\n    let wasmCache$1 = null;\n    /**\n     * Calculates Whirlpool hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function whirlpool(data) {\n        if (wasmCache$1 === null) {\n            return lockedCreate(mutex$1, wasmJson$1, 64)\n                .then((wasm) => {\n                wasmCache$1 = wasm;\n                return wasmCache$1.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$1.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new Whirlpool hash instance\n     */\n    function createWhirlpool() {\n        return WASMInterface(wasmJson$1, 64).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 64,\n            };\n            return obj;\n        });\n    }\n\n    var name = \"sm3\";\n    var data = \"AGFzbQEAAAABDANgAAF/YAAAYAF/AAMIBwABAgIBAAIEBQFwAQEBBQQBAQICBg4CfwFB8IkFC38AQYAICwdwCAZtZW1vcnkCAA5IYXNoX0dldEJ1ZmZlcgAACUhhc2hfSW5pdAABC0hhc2hfVXBkYXRlAAIKSGFzaF9GaW5hbAAEDUhhc2hfR2V0U3RhdGUABQ5IYXNoX0NhbGN1bGF0ZQAGClNUQVRFX1NJWkUDAQq4GAcFAEGACQtRAEEAQs3ct5zuycP9sH83AqCJAUEAQrzhvMuqlc6YFjcCmIkBQQBC14WRuYHAgcVaNwKQiQFBAELvrICcl9esiskANwKIiQFBAEIANwKAiQELiAIBBH8CQCAARQ0AQQAhAUEAQQAoAoCJASICIABqIgM2AoCJASACQT9xIQQCQCADIAJPDQBBAEEAKAKEiQFBAWo2AoSJAQtBgAkhAgJAIARFDQACQEHAACAEayIBIABNDQAgBCEBDAELQQAhAgNAIAQgAmpBqIkBaiACQYAJai0AADoAACAEIAJBAWoiAmpBwABHDQALQaiJARADIAFBgAlqIQIgACABayEAQQAhAQsCQCAAQcAASQ0AA0AgAhADIAJBwABqIQIgAEFAaiIAQT9LDQALCyAARQ0AIAFBqIkBaiEEA0AgBCACLQAAOgAAIARBAWohBCACQQFqIQIgAEF/aiIADQALCwuDDAEZfyMAQZACayIBJAAgASAAKAIIIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZycjYCCCABIAAoAhQiAkEYdCACQQh0QYCA/AdxciACQQh2QYD+A3EgAkEYdnJyNgIUIAEgACgCGCICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnI2AhggASAAKAIcIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZyciIDNgIcIAEgACgCACICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiBDYCACABIAAoAhAiAkEYdCACQQh0QYCA/AdxciACQQh2QYD+A3EgAkEYdnJyIgU2AhAgASAAKAIEIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZyciIGNgIEIAEgACgCICICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiBzYCICABIAAoAgwiAkEYdCACQQh0QYCA/AdxciACQQh2QYD+A3EgAkEYdnJyIgg2AgwgACgCJCECIAEgACgCNCIJQRh0IAlBCHRBgID8B3FyIAlBCHZBgP4DcSAJQRh2cnIiCjYCNCABIAAoAigiCUEYdCAJQQh0QYCA/AdxciAJQQh2QYD+A3EgCUEYdnJyIgs2AiggASADIARzIApBD3dzIgkgC3MgCEEHd3MgCUEPd3MgCUEXd3MiDDYCQCABIAAoAjgiCUEYdCAJQQh0QYCA/AdxciAJQQh2QYD+A3EgCUEYdnJyIgM2AjggASAAKAIsIglBGHQgCUEIdEGAgPwHcXIgCUEIdkGA/gNxIAlBGHZyciIENgIsIAEgByAGcyADQQ93cyIJIARzIAVBB3dzIAlBD3dzIAlBF3dzNgJEIAEgAkEYdCACQQh0QYCA/AdxciACQQh2QYD+A3EgAkEYdnJyIgk2AiQgASgCCCEDIAEgACgCPCICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiAjYCPCABIAAoAjAiAEEYdCAAQQh0QYCA/AdxciAAQQh2QYD+A3EgAEEYdnJyIgQ2AjAgASAJIANzIAJBD3dzIgAgBHMgASgCFEEHd3MgAEEPd3MgAEEXd3M2AkggASAIIAtzIAxBD3dzIgAgCnMgAEEPd3MgAEEXd3MgASgCGEEHd3M2AkxBACEGQSAhByABIQlBACgCiIkBIg0hCEEAKAKkiQEiDiEPQQAoAqCJASIQIQpBACgCnIkBIhEhEkEAKAKYiQEiEyELQQAoApSJASIUIRVBACgCkIkBIhYhA0EAKAKMiQEiFyEYA0AgEiALIgJzIAoiBHMgD2ogCCIAQQx3IgogAmpBmYqxzgcgB3ZBmYqxzgcgBnRyakEHdyIPaiAJKAIAIhlqIghBCXcgCHMgCEERd3MhCyADIgUgGHMgAHMgFWogDyAKc2ogCUEQaigCACAZc2ohCCAJQQRqIQkgB0F/aiEHIBJBE3chCiAYQQl3IQMgBCEPIAIhEiAFIRUgACEYIAZBAWoiBkEQRw0AC0EAIQZBECEHA0AgASAGaiIJQdAAaiAJQSxqKAIAIAlBEGooAgBzIAlBxABqKAIAIhVBD3dzIhIgCUE4aigCAHMgCUEcaigCAEEHd3MgEkEPd3MgEkEXd3MiGTYCACAKIg8gCyIJQX9zcSACIAlxciAEaiAIIhJBDHciCiAJakGKu57UByAHd2pBB3ciBGogDGoiCEEJdyAIcyAIQRF3cyELIBIgAyIYIABycSAYIABxciAFaiAEIApzaiAZIAxzaiEIIAJBE3chCiAAQQl3IQMgB0EBaiEHIBUhDCAPIQQgCSECIBghBSASIQAgBkEEaiIGQcABRw0AC0EAIA8gDnM2AqSJAUEAIAogEHM2AqCJAUEAIAkgEXM2ApyJAUEAIAsgE3M2ApiJAUEAIBggFHM2ApSJAUEAIAMgFnM2ApCJAUEAIBIgF3M2AoyJAUEAIAggDXM2AoiJASABQZACaiQAC4UIAQd/IwBBEGsiACQAIABBACgCgIkBIgFBG3QgAUELdEGAgPwHcXIgAUEFdkGA/gNxIAFBA3RBGHZycjYCDCAAQQAoAoSJASICQQN0IAFBHXZyIgNBGHQgA0EIdEGAgPwHcXIgA0EIdkGA/gNxIANBGHZyciIENgIIAkBBOEH4ACABQT9xIgVBOEkbIAVrIgNFDQBBACADIAFqIgE2AoCJAQJAIAEgA08NAEEAIAJBAWo2AoSJAQtBkAghAQJAAkAgBUUNACADQcAAIAVrIgJJDQFBACEBA0AgBSABakGoiQFqIAFBkAhqLQAAOgAAIAUgAUEBaiIBakHAAEcNAAtBqIkBEAMgAkGQCGohASADIAJrIQMLQQAhBQsCQCADQcAASQ0AA0AgARADIAFBwABqIQEgA0FAaiIDQT9LDQALCyADRQ0AIAVBqIkBaiEFA0AgBSABLQAAOgAAIAVBAWohBSABQQFqIQEgA0F/aiIDDQALC0EAQQAoAoCJASIBQQhqNgKAiQEgAUE/cSECAkAgAUF4SQ0AQQBBACgChIkBQQFqNgKEiQELQQAhBkEIIQUgAEEIaiEBAkACQCACRQ0AAkAgAkE4Tw0AIAIhBgwBCyACQaiJAWogBDoAAAJAIAJBP0YNACACQamJAWogBEEIdjoAACACQT9zQX9qIgVFDQAgAkGqiQFqIQEgAEEIakECciEDA0AgASADLQAAOgAAIAFBAWohASADQQFqIQMgBUF/aiIFDQALC0GoiQEQAyACQUhqIgVFDQEgAEEIakHAACACa2ohAQsgBkGoiQFqIQMDQCADIAEtAAA6AAAgA0EBaiEDIAFBAWohASAFQX9qIgUNAAsLQQBBACgCiIkBIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYCgAlBAEEAKAKMiQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgKECUEAQQAoApCJASIBQRh0IAFBCHRBgID8B3FyIAFBCHZBgP4DcSABQRh2cnI2AogJQQBBACgClIkBIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYCjAlBAEEAKAKYiQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgKQCUEAQQAoApyJASIBQRh0IAFBCHRBgID8B3FyIAFBCHZBgP4DcSABQRh2cnI2ApQJQQBBACgCoIkBIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycjYCmAlBAEEAKAKkiQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgKcCSAAQRBqJAALBgBBgIkBC8ABAQJ/QQBCzdy3nO7Jw/2wfzcCoIkBQQBCvOG8y6qVzpgWNwKYiQFBAELXhZG5gcCBxVo3ApCJAUEAQu+sgJyX16yKyQA3AoiJAUEAQgA3AoCJAQJAIABFDQBBACAANgKAiQFBgAkhAQJAIABBwABJDQBBgAkhAQNAIAEQAyABQcAAaiEBIABBQGoiAEE/Sw0ACyAARQ0BC0EAIQIDQCACQaiJAWogASACai0AADoAACAAIAJBAWoiAkcNAAsLEAQLC1ECAEGACAsEaAAAAABBkAgLQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\";\n    var hash = \"6e6f46ad\";\n    var wasmJson = {\n    \tname: name,\n    \tdata: data,\n    \thash: hash\n    };\n\n    const mutex = new Mutex();\n    let wasmCache = null;\n    /**\n     * Calculates SM3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sm3(data) {\n        if (wasmCache === null) {\n            return lockedCreate(mutex, wasmJson, 32)\n                .then((wasm) => {\n                wasmCache = wasm;\n                return wasmCache.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SM3 hash instance\n     */\n    function createSM3() {\n        return WASMInterface(wasmJson, 32).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 32,\n            };\n            return obj;\n        });\n    }\n\n    exports.adler32 = adler32;\n    exports.argon2Verify = argon2Verify;\n    exports.argon2d = argon2d;\n    exports.argon2i = argon2i;\n    exports.argon2id = argon2id;\n    exports.bcrypt = bcrypt;\n    exports.bcryptVerify = bcryptVerify;\n    exports.blake2b = blake2b;\n    exports.blake2s = blake2s;\n    exports.blake3 = blake3;\n    exports.crc32 = crc32;\n    exports.crc32c = crc32c;\n    exports.createAdler32 = createAdler32;\n    exports.createBLAKE2b = createBLAKE2b;\n    exports.createBLAKE2s = createBLAKE2s;\n    exports.createBLAKE3 = createBLAKE3;\n    exports.createCRC32 = createCRC32;\n    exports.createCRC32C = createCRC32C;\n    exports.createHMAC = createHMAC;\n    exports.createKeccak = createKeccak;\n    exports.createMD4 = createMD4;\n    exports.createMD5 = createMD5;\n    exports.createRIPEMD160 = createRIPEMD160;\n    exports.createSHA1 = createSHA1;\n    exports.createSHA224 = createSHA224;\n    exports.createSHA256 = createSHA256;\n    exports.createSHA3 = createSHA3;\n    exports.createSHA384 = createSHA384;\n    exports.createSHA512 = createSHA512;\n    exports.createSM3 = createSM3;\n    exports.createWhirlpool = createWhirlpool;\n    exports.createXXHash128 = createXXHash128;\n    exports.createXXHash3 = createXXHash3;\n    exports.createXXHash32 = createXXHash32;\n    exports.createXXHash64 = createXXHash64;\n    exports.keccak = keccak;\n    exports.md4 = md4;\n    exports.md5 = md5;\n    exports.pbkdf2 = pbkdf2;\n    exports.ripemd160 = ripemd160;\n    exports.scrypt = scrypt;\n    exports.sha1 = sha1;\n    exports.sha224 = sha224;\n    exports.sha256 = sha256;\n    exports.sha3 = sha3;\n    exports.sha384 = sha384;\n    exports.sha512 = sha512;\n    exports.sm3 = sm3;\n    exports.whirlpool = whirlpool;\n    exports.xxhash128 = xxhash128;\n    exports.xxhash3 = xxhash3;\n    exports.xxhash32 = xxhash32;\n    exports.xxhash64 = xxhash64;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "const fetch = require('cross-fetch');\r\nconst hash =  require('hash-wasm');\r\n\r\n\r\nconst buffer = require('buffer/').Buffer;\r\n\r\nmodule.exports = class IonProofOfWork {\r\n    static randomHexString() {\r\n        const size = Math.floor(Math.random() * Math.floor(500));\r\n        const randomString = [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');\r\n        return buffer.from(randomString).toString('hex');\r\n    }\r\n\r\n    static async submitIonRequestUntilSuccess(getChallengeUri, solveChallengeUri, requestBody) {\r\n        let result;\r\n        while (result === undefined) {\r\n            result = await this.submitIonRequest(getChallengeUri, solveChallengeUri, requestBody);\r\n        };\r\n    };\r\n\r\n    static async submitIonRequest(getChallengeUri, solveChallengeUri, requestBody) {\r\n        console.log(`Getting challenge from: ${getChallengeUri}`);\r\n        const getChallengeResponse = await fetch(getChallengeUri, {\r\n            mode: 'cors'\r\n        });\r\n        if (!getChallengeResponse.ok) {\r\n            throw new Error('Get challenge service not available')\r\n        }\r\n        const challengeBody = await getChallengeResponse.json();\r\n        console.log(challengeBody);\r\n\r\n        const challengeNonce = challengeBody.challengeNonce;\r\n        const largestAllowedHash = challengeBody.largestAllowedHash;\r\n        const validDuration = challengeBody.validDurationInMinutes * 60 * 1000;\r\n    \r\n        let answerHash = '';\r\n        let answerNonce = '';\r\n\r\n        console.log(`Solving for body:\\n${requestBody}`);\r\n        const startTime = Date.now();\r\n        do {\r\n            answerNonce = this.randomHexString();\r\n            answerHash = await hash.argon2id({\r\n                password: buffer.from(answerNonce, 'hex').toString() + requestBody,\r\n                salt: buffer.from(challengeNonce, 'hex'),\r\n                parallelism: 1,\r\n                iterations: 1,\r\n                memorySize: 1000,\r\n                hashLength: 32, // output size = 32 bytes\r\n                outputType: 'hex',\r\n            });\r\n            console.log(answerHash);\r\n            console.log(largestAllowedHash);\r\n        } while (answerHash > largestAllowedHash && Date.now() - startTime < validDuration);\r\n\r\n        if (Date.now() - startTime >  validDuration) {\r\n            return;\r\n        }\r\n\r\n        console.log('3')\r\n        const response = await fetch(solveChallengeUri, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            body: requestBody,\r\n            headers: {\r\n                'Challenge-Nonce': challengeNonce,\r\n                'Answer-Nonce': answerNonce,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if (response.status >= 500) {\r\n            console.log(`Unexpected 5xx response: ${await response.text()}`);\r\n        } else if (response.status >= 400) {\r\n            // 400 means bad request, so should retry with a new challenge\r\n            console.log(`Bed request: ${await response.text()}`);\r\n            console.log('Retrying with new challenge and difficulty');\r\n        } else if (response.status >= 300) {\r\n            console.log(`Unexpected 3xx response: ${await response.text()}`);\r\n        } else {\r\n            //success\r\n            console.log(`Successful registration`);\r\n            const responseText = await response.text();\r\n            console.log(responseText);\r\n            return responseText;\r\n        };\r\n    }\r\n}\r\n", "import { IonDid, IonRequest, LocalSigner } from '@decentralized-identity/ion-sdk';\r\nimport { generateKeyPair } from './utils.js';\r\n\r\nexport class DID {\r\n  #ops;\r\n  #opQueue = Promise.resolve();\r\n  #longForm;\r\n  #longFormPromise;\r\n  #generateKeyPair;\r\n\r\n  constructor(options = { }) {\r\n    this.#ops = options.ops || [ ];\r\n    this.#generateKeyPair = options.generateKeyPair || generateKeyPair;\r\n    if (!this.#ops.length) {\r\n      this.#ops.push(this.generateOperation('create', options.content || { }, false));\r\n    }\r\n  }\r\n\r\n  async generateOperation(type, content, commit = true) {\r\n    return this.#addToOpQueue(() => this.#generateOperation(type, content, commit));\r\n  }\r\n\r\n  async #addToOpQueue(callback = () => Promise.resolve()) {\r\n    const opQueue = this.#opQueue;\r\n    this.#opQueue = new Promise((resolve, reject) => {\r\n      opQueue.finally(() => callback().then(resolve, reject));\r\n    });\r\n    return this.#opQueue;\r\n  }\r\n\r\n  async #generateOperation(type, content, commit) {\r\n    let lastOp = this.#ops[this.#ops.length - 1];\r\n    if (lastOp && lastOp.operation === 'deactivate') {\r\n      throw 'Cannot perform further operations on a deactivated DID';\r\n    }\r\n    let op = {\r\n      operation: type,\r\n      content\r\n    };\r\n    if (type !== 'create') {\r\n      op.previous = this.#ops.reduce((last, op) => {\r\n        return op.operation === type || (op.operation === 'recover' && (type === 'deactivate' || type === 'update')) ? op : last;\r\n      }, this.#ops[0]);\r\n    }\r\n    if (type === 'create' || type === 'recover') {\r\n      op.recovery = await this.#generateKeyPair();\r\n    }\r\n    if (type !== 'deactivate') {\r\n      op.update = await this.#generateKeyPair();\r\n    }\r\n    if (commit) {\r\n      this.#ops.push(op);\r\n    }\r\n\r\n    return op;\r\n  }\r\n\r\n  async generateRequest(payload = 0, options = { }) {\r\n    let op;\r\n    if (typeof payload === 'number') {\r\n      await this.#addToOpQueue();\r\n      op = await this.getOperation(payload);\r\n    } else {\r\n      op = payload;\r\n    }\r\n\r\n    switch (op.operation) {\r\n      case 'update':\r\n        return IonRequest.createUpdateRequest({\r\n          didSuffix: await this.getSuffix(),\r\n          signer: options.signer || LocalSigner.create(op.previous.update.privateJwk),\r\n          updatePublicKey: op.previous.update.publicJwk,\r\n          nextUpdatePublicKey: op.update.publicJwk,\r\n          servicesToAdd: op.content?.addServices,\r\n          idsOfServicesToRemove: op.content?.removeServices,\r\n          publicKeysToAdd: op.content?.addPublicKeys,\r\n          idsOfPublicKeysToRemove: op.content?.removePublicKeys\r\n        });\r\n\r\n      case 'recover':\r\n        return IonRequest.createRecoverRequest({\r\n          didSuffix: await this.getSuffix(),\r\n          signer: options.signer || LocalSigner.create(op.previous.recovery.privateJwk),\r\n          recoveryPublicKey: op.previous.recovery.publicJwk,\r\n          nextRecoveryPublicKey: op.recovery.publicJwk,\r\n          nextUpdatePublicKey: op.update.publicJwk,\r\n          document: op.content\r\n        });\r\n\r\n      case 'deactivate':\r\n        return IonRequest.createDeactivateRequest({\r\n          didSuffix: await this.getSuffix(),\r\n          recoveryPublicKey: op.previous.recovery.publicJwk,\r\n          signer: options.signer || LocalSigner.create(op.previous.recovery.privateJwk)\r\n        });\r\n\r\n      case 'create':\r\n      default:\r\n        return IonRequest.createCreateRequest({\r\n          recoveryKey: op.recovery.publicJwk,\r\n          updateKey: op.update.publicJwk,\r\n          document: op.content\r\n        });\r\n    }\r\n  }\r\n\r\n  async getAllOperations() {\r\n    return Promise.all(this.#ops);\r\n  }\r\n\r\n  async getOperation(index) {\r\n    return this.#ops[index];\r\n  }\r\n\r\n  async getState() {\r\n    const [ shortForm, longForm, ops ] = await Promise.all([\r\n      this.getURI('short'),\r\n      this.getURI(),\r\n      this.getAllOperations()\r\n    ]);\r\n    return { shortForm, longForm, ops };\r\n  }\r\n\r\n  /**\r\n   * returns the suffix portion of the DID string for the DID URI the class instance represents\r\n   * @example\r\n   * <caption>example DID URI: `did:ion:EiCZws6U61LV3YmvxmOIlt4Ap5RSJdIkb_lJXhuUPqQYBg`</caption>\r\n   *\r\n   * // returns: EiCZws6U61LV3YmvxmOIlt4Ap5RSJdIkb_lJXhuUPqQYBg\r\n   * did.getSuffix()\r\n   * @returns {string} suffix\r\n   */\r\n  async getSuffix() {\r\n    const uri = await this.getURI('short');\r\n    return uri.split(':').pop();\r\n  }\r\n\r\n  /**\r\n   * returns either the long or short form URI for the DID based on the form provided\r\n   * @param {'long' | 'short'} form - There are two forms of ION DID URI, the Long-Form URI, which can\r\n   * be used instantly without anchoring an ION DID, and the Short-Form URI, which is only\r\n   * resolvable after a DID has been published to the ION network.\r\n   * @returns {Promise<string>}\r\n   */\r\n  async getURI(form = 'long') {\r\n    if (this.#longFormPromise) {\r\n      await this.#longFormPromise;\r\n    }\r\n\r\n    if (!this.#longForm) {\r\n      this.#longFormPromise = this.#addToOpQueue(async () => {\r\n        const create = await this.getOperation(0);\r\n        return IonDid.createLongFormDid({\r\n          recoveryKey: create.recovery.publicJwk,\r\n          updateKey: create.update.publicJwk,\r\n          document: create.content\r\n        });\r\n      });\r\n      this.#longForm = await this.#longFormPromise;\r\n      this.#longFormPromise = undefined;\r\n    }\r\n\r\n    return !form || form === 'long' ? this.#longForm : this.#longForm.split(':').slice(0, -1).join(':');\r\n  }\r\n}", "import crossFetch from 'cross-fetch';\r\nimport ProofOfWorkSDK from '@decentralized-identity/ion-pow-sdk';\r\n\r\nimport * as ed25519 from '@noble/ed25519';\r\nimport * as secp256k1 from '@noble/secp256k1';\r\n\r\nimport { base64url } from 'multiformats/bases/base64';\r\nimport { IonKey } from '@decentralized-identity/ion-sdk';\r\nimport { sha256 } from 'multiformats/hashes/sha2';\r\n\r\n// supports fetch in: node, browsers, and browser extensions.\r\n// uses native fetch if available in environment or falls back to a ponyfill.\r\n// 'cross-fetch' is a ponyfill that uses `XMLHTTPRequest` under the hood.\r\n// `XMLHTTPRequest` cannot be used in browser extension background service workers.\r\n// browser extensions get even more strict with `fetch` in that it cannot be referenced\r\n// indirectly.\r\nconst fetch = globalThis.fetch ?? crossFetch;\r\n\r\n/**\r\n * @typedef {object} PrivateJWK\r\n * @property {'Ed25519'|'secp256k1'} privateJWK.crv\r\n * @property {string} privateJWK.d\r\n */\r\n\r\n/**\r\n * @typedef {object} PublicJWK\r\n * @property {'Ed25519'|'secp256k1'} publicJWK.crv\r\n * @property {string} publicJWK.x\r\n * @property {string} [publicJWK.y]\r\n */\r\n\r\n/**\r\n * @typedef {object} KeyPair\r\n * @property {PrivateJWK} privateJwk\r\n * @property {PublicJWK} publicJwk\r\n */\r\n\r\nconst keyGenerators = {\r\n  'Ed25519': IonKey.generateEd25519OperationKeyPair,\r\n  'EdDSA': IonKey.generateEd25519OperationKeyPair,\r\n  'secp256k1': IonKey.generateEs256kOperationKeyPair,\r\n  'ES256K': IonKey.generateEs256kOperationKeyPair\r\n};\r\n\r\n/**\r\n * generates a keypair of the type provided\r\n * @param {'Ed25519'| 'EdDSA' | 'secp256k1' | 'ES256K'} type\r\n * @returns {KeyPair}\r\n */\r\nexport async function generateKeyPair(type = 'secp256k1') {\r\n  const keyGeneratorFn = keyGenerators[type];\r\n\r\n  if (!keyGeneratorFn) {\r\n    throw new Error('Unsupported key type');\r\n  }\r\n\r\n  const [ publicJwk, privateJwk ] = await keyGeneratorFn();\r\n  return { publicJwk, privateJwk };\r\n}\r\n\r\n/**\r\n * signs the payload provided using the key provided\r\n * @param {object} params\r\n * @param {any} params.payload - anything JSON stringifiable.\r\n * @param {object} [params.header] - any properties you want included in the header. `alg` will be included for you\r\n * @param {PrivateJWK} params.privateJwk - the key to sign with\r\n * @returns {string} compact JWS\r\n */\r\nexport async function sign(params = { }) {\r\n  const { header = { }, payload, privateJwk } = params;\r\n\r\n  switch (privateJwk.crv) {\r\n    case 'Ed25519':\r\n      header.alg = 'EdDSA';\r\n      break;\r\n\r\n    case 'secp256k1':\r\n      header.alg = 'ES256K';\r\n      break;\r\n\r\n    default:\r\n      throw new Error('Unsupported cryptographic type');\r\n  }\r\n\r\n  const textEncoder = new TextEncoder();\r\n\r\n  const headerStr = JSON.stringify(header);\r\n  const headerBytes = textEncoder.encode(headerStr);\r\n  const headerBase64Url = base64url.baseEncode(headerBytes);\r\n\r\n  const payloadStr = JSON.stringify(payload);\r\n  const payloadBytes = textEncoder.encode(payloadStr);\r\n  const payloadBase64Url = base64url.baseEncode(payloadBytes);\r\n\r\n  // this is what's going to get signed\r\n  const message = `${headerBase64Url}.${payloadBase64Url}`;\r\n  let messageBytes = textEncoder.encode(message);\r\n\r\n  if (privateJwk.crv === 'secp256k1') {\r\n    messageBytes = await sha256.encode(messageBytes);\r\n  }\r\n\r\n  const privateKeyBytes = base64url.baseDecode(privateJwk.d);\r\n\r\n  // sign the actual payload\r\n  let signatureBytes;\r\n  if (privateJwk.crv === 'Ed25519') {\r\n    signatureBytes = await ed25519.signAsync(messageBytes, privateKeyBytes);\r\n  }\r\n  else if (privateJwk.crv === 'secp256k1') {\r\n    const signature = await secp256k1.signAsync(messageBytes, privateKeyBytes);\r\n    signatureBytes = signature.toCompactRawBytes();\r\n  }\r\n  const signature = base64url.baseEncode(signatureBytes);\r\n\r\n  return `${message}.${signature}`;\r\n}\r\n\r\n/**\r\n *  verifies the provided JWS with the provided public key\r\n * @param {object} params\r\n * @param {string} params.jws - the compact jws to verify\r\n * @param {PublicJWK} params.publicJwk - the public key used to verify the signature\r\n * @returns {boolean}\r\n */\r\nexport async function verify(params = { }) {\r\n  const { jws, publicJwk } = params;\r\n  const [ headerBase64Url, payloadBase64Url, signatureBase64Url ] = jws.split('.');\r\n\r\n  const message = `${headerBase64Url}.${payloadBase64Url}`;\r\n  const messageBytes = new TextEncoder().encode(message);\r\n\r\n  const signatureBytes = base64url.baseDecode(signatureBase64Url);\r\n\r\n  switch (publicJwk.crv) {\r\n    case 'secp256k1': {\r\n      const xBytes = base64url.baseDecode(publicJwk.x);\r\n      const yBytes = base64url.baseDecode(publicJwk.y);\r\n\r\n      const publicKeyBytes = new Uint8Array(xBytes.length + yBytes.length + 1);\r\n\r\n      // create an uncompressed public key using the x and y values from the provided JWK.\r\n      // a leading byte of 0x04 indicates that the public key is uncompressed\r\n      // (e.g. x and y values are both present)\r\n      publicKeyBytes.set([ 0x04 ], 0);\r\n      publicKeyBytes.set(xBytes, 1);\r\n      publicKeyBytes.set(yBytes, xBytes.length + 1);\r\n\r\n      const hashedMessage = await sha256.encode(messageBytes);\r\n\r\n      return secp256k1.verify(signatureBytes, hashedMessage, publicKeyBytes);\r\n    }\r\n\r\n    case 'Ed25519': {\r\n      const publicKeyBytes = base64url.baseDecode(publicJwk.x);\r\n\r\n      return ed25519.verifyAsync(signatureBytes, messageBytes, publicKeyBytes);\r\n    }\r\n\r\n    default:\r\n      throw new Error('Unsupported cryptographic type');\r\n  }\r\n}\r\n\r\n/**\r\n * resolves the ION DID provided\r\n * @param {string} didUri\r\n * @param {object} options\r\n * @param {string} [nodeEndpoint] - the resolver node\r\n * @returns\r\n */\r\nexport async function resolve(didUri, options = { }) {\r\n  const { nodeEndpoint = 'https://beta.discover.did.microsoft.com/1.0/identifiers' } = options;\r\n\r\n  const response = await fetch(`${nodeEndpoint}/${didUri}`);\r\n\r\n  if (response.status >= 400) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\nexport async function anchor(anchorRequest, options = { }) {\r\n  const {\r\n    challengeEndpoint = 'https://beta.ion.msidentity.com/api/v1.0/proof-of-work-challenge',\r\n    solutionEndpoint = 'https://beta.ion.msidentity.com/api/v1.0/operations'\r\n  } = options;\r\n\r\n  return ProofOfWorkSDK.submitIonRequest(challengeEndpoint, solutionEndpoint, JSON.stringify(anchorRequest));\r\n};", "/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _255n = BigInt(255);\nconst CURVE_ORDER = _2n ** BigInt(252) + BigInt('27742317777372353535851937790883648493');\nconst CURVE = {\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: _2n ** _255n - BigInt(19),\n    l: CURVE_ORDER,\n    n: CURVE_ORDER,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n};\nexport { CURVE };\nconst MAX_256B = _2n ** BigInt(256);\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(_2n * mod(Z1 ** _2n));\n        const D = mod(a * A);\n        const E = mod(mod((X1 + Y1) ** _2n) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2 ** _2n));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= MAX_256B)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & (_2n ** _255n - _1n));\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nasync function sha512ModqLE(...args) {\n    const hash = await utils.sha512(concatBytes(...args));\n    const value = bytesToNumberLE(hash);\n    return mod(value, CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nasync function getExtendedPublicKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, MAX_256B))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    const hashed = await utils.sha512(key);\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = mod(bytesToNumberLE(head), CURVE.l);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = await sha512ModqLE(prefix, message);\n    const R = Point.BASE.multiply(r);\n    const k = await sha512ModqLE(R.toRawBytes(), pointBytes, message);\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nexport async function verify(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    const k = await sha512ModqLE(r.toRawBytes(), publicKey.toRawBytes(), message);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        x_3 = mod((DA + CB) ** _2n);\n        z_3 = mod(x_1 * (DA - CB) ** _2n);\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    bytesToHex,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumberLE(hash), CURVE.l);\n        if (num === _0n || num === _1n)\n            throw new Error('Invalid private key');\n        return num;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n};\n", "/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        const G = JacobianPoint.BASE;\n        const P0 = JacobianPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nasync function taggedHash(tag, ...messages) {\n    const tagB = new Uint8Array(tag.split('').map((c) => c.charCodeAt(0)));\n    const tagH = await utils.sha256(tagB);\n    const h = await utils.sha256(concatBytes(tagH, tagH, ...messages));\n    return bytesToNumber(h);\n}\nasync function createChallenge(x, P, message) {\n    const rx = numTo32b(x);\n    const t = await taggedHash('BIP0340/challenge', rx, P.toRawX(), message);\n    return mod(t, CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const { n } = CURVE;\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const d = hasEvenY(P) ? d0 : n - d0;\n    const t0h = await taggedHash('BIP0340/aux', rand);\n    const t = d ^ t0h;\n    const k0h = await taggedHash('BIP0340/nonce', numTo32b(t), P.toRawX(), m);\n    const k0 = mod(k0h, n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const k = hasEvenY(R) ? k0 : n - k0;\n    const e = await createChallenge(R.x, P, m);\n    const sig = new SchnorrSignature(R.x, mod(k + e * d, n)).toRawBytes();\n    const isValid = await schnorrVerify(sig, m, P.toRawX());\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    let sig;\n    try {\n        sig = raw ? signature : SchnorrSignature.fromHex(signature);\n        if (raw)\n            sig.assertValidity();\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    const m = ensureBytes(message);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const e = await createChallenge(r, P, m);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n);\n        if (num === _0n || num === _1n)\n            throw new Error('Invalid private key');\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    mod,\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            return Uint8Array.from(createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n"],
  "mappings": "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Ac;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;A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",
  "names": ["code", "name", "encode", "decode", "string", "Encoder", "merge", "sets", "length", "slice", "xl", "x", "join", "subexp", "str", "typeOf", "o", "undefined", "Object", "prototype", "toString", "call", "split", "pop", "shift", "toLowerCase", "toUpperCase", "toArray", "obj", "Array", "setInterval", "assign", "target", "source", "key", "buildExps", "isIRI", "ALPHA$$", "CR$", "DIGIT$$", "DQUOTE$$", "HEXDIG$$", "SP$$", "PCT_ENCODED$", "SUB_DELIMS$$", "RESERVED$$", "GEN_DELIMS$$", "UCSCHAR$$", "SCHEME$", "USERINFO$", "UNRESERVED$$", "DEC_OCTET$", "DEC_OCTET_RELAXED$", "H16$", "LS32$", "IPV4ADDRESS$", "IPV6ADDRESS1$", "IPV6ADDRESS2$", "IPV6ADDRESS3$", "IPV6ADDRESS4$", "IPV6ADDRESS5$", "IPV6ADDRESS6$", "IPV6ADDRESS7$", "IPV6ADDRESS8$", "IPV6ADDRESS9$", "ZONEID$", "IPV6ADDRESS$", "IP_LITERAL$", "IPV6ADDRZ_RELAXED$", "IPVFUTURE$", "HOST$", "REG_NAME$", "PORT$", "AUTHORITY$", "PCHAR$", "SEGMENT$", "SEGMENT_NZ$", "SEGMENT_NZ_NC$", "PATH_ABEMPTY$", "PATH_ABSOLUTE$", "PATH$", "PATH_NOSCHEME$", "PATH_ROOTLESS$", "PATH_EMPTY$", "QUERY$", "IPRIVATE$$", "FRAGMENT$", "HIER_PART$", "URI$", "RELATIVE_PART$", "RELATIVE$", "URI_REFERENCE$", "ABSOLUTE_URI$", "GENERIC_REF$", "RELATIVE_REF$", "ABSOLUTE_REF$", "SAMEDOC_REF$", "AUTHORITY_REF$", "RegExp", "maxInt", "base", "tMin", "tMax", "skew", "damp", "initialBias", "initialN", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "Math", "stringFromCharCode", "String", "fromCharCode", "error", "type", "RangeError", "map", "array", "fn", "result", "mapDomain", "string", "parts", "replace", "labels", "encoded", "ucs2decode", "output", "counter", "value", "charCodeAt", "extra", "push", "ucs2encode", "fromCodePoint", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "i", "n", "bias", "basic", "lastIndexOf", "j", "index", "oldi", "w", "t", "baseMinusT", "out", "splice", "encode", "currentValue", "basicLength", "handledCPCount", "m", "handledCPCountPlusOne", "q", "qMinusT", "toUnicode", "test", "toASCII", "punycode", "SCHEMES", "pctEncChar", "chr", "c", "e", "pctDecChars", "newStr", "il", "parseInt", "substr", "c2", "c3", "_normalizeComponentEncoding", "components", "protocol", "decodeUnreserved", "decStr", "match", "UNRESERVED", "scheme", "PCT_ENCODED", "NOT_SCHEME", "userinfo", "NOT_USERINFO", "host", "NOT_HOST", "path", "NOT_PATH", "NOT_PATH_NOSCHEME", "query", "NOT_QUERY", "fragment", "NOT_FRAGMENT", "_stripLeadingZeros", "_normalizeIPv4", "matches", "IPV4ADDRESS", "address", "_normalizeIPv6", "IPV6ADDRESS", "zone", "reverse", "last", "first", "firstFields", "lastFields", "isLastFieldIPv4Address", "fieldCount", "lastFieldsStart", "fields", "allZeroFields", "reduce", "acc", "field", "lastLongest", "longestZeroFields", "sort", "a", "b", "newHost", "newFirst", "newLast", "URI_PARSE", "NO_MATCH_IS_UNDEFINED", "parse", "uriString", "options", "iri", "IRI_PROTOCOL", "URI_PROTOCOL", "reference", "port", "isNaN", "indexOf", "schemeHandler", "unicodeSupport", "domainHost", "_recomposeAuthority", "uriTokens", "_", "$1", "$2", "RDS1", "RDS2", "RDS3", "RDS5", "removeDotSegments", "im", "s", "Error", "serialize", "authority", "charAt", "absolutePath", "resolveComponents", "relative", "skipNormalization", "tolerant", "resolve", "baseURI", "relativeURI", "schemelessOptions", "normalize", "uri", "equal", "uriA", "uriB", "escapeComponent", "ESCAPE", "unescapeComponent", "handler", "secure", "http", "isSecure", "wsComponents", "resourceName", "ws", "O", "ATEXT$$", "QTEXT$$", "VCHAR$$", "SOME_DELIMS$$", "NOT_LOCAL_PART", "NOT_HFNAME", "NOT_HFVALUE", "mailtoComponents", "to", "unknownHeaders", "headers", "hfields", "hfield", "toAddrs", "subject", "body", "addr", "toAddr", "atIdx", "localPart", "domain", "name", "URN_PARSE", "urnComponents", "nid", "nss", "urnScheme", "uriComponents", "UUID", "uuidComponents", "uuid", "https", "wss", "mailto", "urn", "OperationKeyType", "object", "base", "encode", "length", "i", "j", "decode", "string", "textDecoder", "textEncoder", "concat", "length", "name", "code", "string", "decode", "string", "encode", "rfc4648", "baseX", "rfc4648", "identity", "require_src", "concat", "name", "encode", "decode", "encode", "MSB", "REST", "MSBALL", "INT", "read", "MSB", "REST", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "require_constants", "name", "encode", "length", "i", "j", "decode", "string", "base_x_default", "init_base_x", "empty", "coerce", "init_bytes", "Encoder", "Decoder", "ComposedDecoder", "or", "Codec", "from", "decode", "encode", "rfc4648", "init_base", "init_base_x", "init_bytes", "name", "base_x_default", "coerce", "string", "init_base", "init_bytes", "from", "init_base2", "init_base", "rfc4648", "init_base", "rfc4648", "init_base", "init_base", "rfc4648", "init_base", "rfc4648", "init_base", "init_base", "base64_exports", "base64", "base64pad", "base64url", "base64urlpad", "init_base64", "init_base", "rfc4648", "encode", "decode", "decode", "init_varint", "code", "decode", "equals", "init_bytes", "init_varint", "code", "digest", "coerce", "from", "name", "code", "encode", "digest", "name", "from", "identity_exports", "identity", "encode", "init_identity", "init_bytes", "coerce", "init_bytes", "init_varint", "init_bytes", "version", "code", "digest", "equals", "base", "decode", "coerce", "length", "cid", "init_varint", "init_bytes", "init_base2", "init_base64", "init_identity", "base64_exports", "identity_exports", "name", "encode", "decode", "string", "toString", "base", "fromString", "string", "base", "length", "require_src", "varint", "name", "decode", "code", "encode", "digest", "length", "encode", "INT", "MSB", "MSBALL", "read", "REST$1", "MSB$1", "encode_1", "REST", "decode", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "varint_default", "init_varint", "encodeTo", "encodingLength", "init_varint", "varint_default", "create", "Digest", "init_digest", "init_varint", "code", "digest", "encodingLength", "encodeTo", "from", "Hasher", "init_hasher", "init_digest", "name", "code", "encode", "create", "digest", "sha2_browser_exports", "sha256", "sha512", "sha", "init_sha2_browser", "init_hasher", "name", "from", "OperationType", "PatchAction", "IonRequest", "IonDid", "nodeCrypto", "_0n", "_1n", "_2n", "CURVE", "POW_2_256", "SQRT_M1", "SQRT_D", "SQRT_AD_MINUS_ONE", "INVSQRT_A_MINUS_D", "ONE_MINUS_D_SQ", "D_MINUS_ONE_SQ", "ExtendedPoint", "Point", "mod", "invertBatch", "assertExtPoint", "base", "window", "pointPrecomputes", "normalizeScalar", "invert", "legacyRist", "assertRstPoint", "RistrettoPoint", "uvRatio", "edIsNegative", "ensureBytes", "bytes255ToNumberLE", "equalBytes", "numberTo32BytesLE", "invertSqrt", "bytesToHex", "bytesToNumberLE", "getExtendedPublicKey", "Signature", "length", "hexes", "hexToBytes", "numberTo32BytesBE", "pow2", "pow_2_252_3", "adjustBytes25519", "sign", "verify", "crypto", "require_lib", "nodeCrypto", "_0n", "_1n", "_2n", "_3n", "_8n", "CURVE", "weistrass", "mod", "USE_ENDOMORPHISM", "JacobianPoint", "Point", "invertBatch", "normalizeScalar", "d", "splitScalarEndo", "base", "window", "pointPrecomputes", "invert", "bytesToNumber", "isValidFieldElement", "sqrtMod", "ensureBytes", "normalizePrivateKey", "truncateHash", "normalizeSignature", "numTo32bStr", "hexToBytes", "sliceDER", "parseDERInt", "bytesToHex", "parseDERSignature", "Signature", "name", "hexToNumber", "isWithinCurveOrder", "numberToHexUnpadded", "length", "hexes", "POW_2_256", "pow2", "divNearest", "POW_2_128", "normalizePublicKey", "sign", "vopts", "verify", "crypto", "IonKey", "IonNetwork", "IonPublicKeyPurpose", "LocalSigner", "global", "self", "exports", "name", "resolve", "decode", "fetch", "global", "exports", "resolve", "textEncoder", "data", "module", "read", "digest", "mutex", "hash", "version", "sha256", "sha512", "name", "code", "len", "i", "len2", "base64", "Buffer", "length", "allocUnsafe", "from", "fromString", "string", "concat", "toString", "equals", "read", "i", "byteLength", "code", "name", "src", "require_src", "fetch", "import_ion_sdk", "base", "window", "length", "crypto", "nodeCrypto", "import_crypto", "_0n", "_1n", "_2n", "CURVE", "CURVE", "mod", "_0n", "Point", "_1n", "invertBatch", "_2n", "normalizeScalar", "d", "base", "window", "pointPrecomputes", "invert", "ensureBytes", "hexToBytes", "bytesToHex", "name", "length", "hexes", "bytesToHex", "hexToBytes", "bytesToHex", "ensureBytes", "normalizeScalar", "mod", "CURVE", "_0n", "pow2", "_2n", "invert", "_1n", "invertBatch", "_0n", "CURVE", "Point", "ensureBytes", "_0n", "CURVE", "invert", "mod", "Point", "Point", "crypto", "nodeCrypto", "init_base64", "crossFetch", "textEncoder", "base64url", "signature", "verify", "ProofOfWorkSDK", "resolve", "op", "create"]
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fs_1 = tslib_1.__importDefault(require("fs"));
var fs_no_eperm_anymore_1 = require("fs-no-eperm-anymore");
var index_1 = require("../../write-file-atomic/index");
// keep definition on file top
exports.NAME = "internal.fs-no-eperm-anymore";
var DEFAULT_FS_NO_EPERM_ANYMORE_OPTIONS = {
    items: [
        {
            platforms: ["win32"],
            errorCodes: ["EPERM", "EBUSY"],
            options: {
                retryIntervalMs: 100,
                retryTimeoutMs: 5 * 1000,
            },
        },
    ],
};
function volume(volumeOptions) {
    var instanceOptions = tslib_1.__assign(tslib_1.__assign({}, DEFAULT_FS_NO_EPERM_ANYMORE_OPTIONS), (volumeOptions ? volumeOptions.fsNoEpermAnymore : {}));
    var impl = fs_no_eperm_anymore_1.instantiate(instanceOptions);
    return {
        _impl: tslib_1.__assign(tslib_1.__assign({}, fs_1.default), impl),
        _name: exports.NAME,
        chmod: impl.chmod,
        chown: impl.chown,
        close: impl.close,
        fsync: impl.fsync,
        mkdir: impl.mkdir,
        open: impl.open,
        readFile: impl.readFile,
        realpath: impl.realpath,
        rename: impl.rename,
        stat: impl.stat,
        writeFile: impl.writeFile,
        writeFileAtomic: function (path /*| number*/, data, writeFileOptions) {
            return index_1.writeFileAtomic(impl, path, data, writeFileOptions, volumeOptions && volumeOptions.writeFileAtomicOptions);
        },
        unlink: impl.unlink,
    };
}
exports.volume = volume;
exports.fs = volume();
//# sourceMappingURL=index.js.map